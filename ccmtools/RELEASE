This document describes the planned and realized workpackages for ccmtools
related to a particular release version. We plan four releases for 2005.
   o) means planned workpackage
   *) means realized workpackage  
      - means workpackage (sub)task
       
==============================================================================
Release 0.5.1
==============================================================================

Dokumentation:
--------------
o) add remote example to Tutorial
o) add DbC example to Tutorial
o) add nested component composition example to Tutorial


ccmtools refactoring:
---------------------
o) remove base_namespace from local and remote generators 
o) organize generation of namespaces and scoped names across generator hierarchies
o) use ccmtools.utils.text.* in all generators (instead inheritance of join, etc)


c++local generator:
-------------------
*) generate deploy_CCM_Local*() and undeploy_CCM_Local*() functions with coded namespace.
o) add Constants.Version to all generated files.
o) add AssemblyFactory Template to CCM.h
o) generate debug output with parameter values.
o) JUnit test case for nested component composition
o) Performance Measurement


c++remote generator:
--------------------
*) separate deploy_CCM_Local*() from deploy_CCM_Remote*()
*) generate deploy_CCM_Remote*() functions with coded namespace.
o) use receptacle Adapter as local receptacle for connection 
   (no remote Context version).
o) test cases for attributes 
o) test cases for supported interfaces
o) test cases for interfaces as parameters
o) generate debug output with parameter values.
o) collect test cases 
o) JUnit test case for nested component composition
o) Performance Measurement
o) implement undeploy_*() functions 


c++remote-test generator:
-------------------------
o) add undeploy_*() functions at test client end.


java-client-lib generator:
--------------------------
o) implement first version 


cpp-environment:
----------------
*) organize package structure
   - move WX::Utils and external to a wx directory
   - move CCM_* to a ccm directory
o) generate CCM.{h,cc} from ccmtools/idl/CCM.idl


java-environment:
-----------------
o) move uml2java from java-environment to ccmtools package.
o) implement utils.CORBA.setDefaultValue() for structures.
o) add Components.jar build from ccmtools/idl/CCM.idl


ccmtools-package:
-----------------
*) add idl/CCM.idl directory


bugfixes:
---------
*) 1100738 The same exception will be generated many times
*) 1101544 Namespace conflict using exceptions
*) 1101651 Namespace conflict using interfaces in remote component




==============================================================================
Release 0.5.2 
==============================================================================


==============================================================================
Release 0.5.3 
==============================================================================


==============================================================================
Release 0.5.4 
==============================================================================
