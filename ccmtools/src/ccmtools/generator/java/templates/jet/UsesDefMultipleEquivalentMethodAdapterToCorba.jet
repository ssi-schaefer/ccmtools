<%@ jet package="ccmtools.generator.java.templates" 
	    class="UsesDefMultipleEquivalentMethodAdapterToCorbaTemplate" 
		imports="ccmtools.generator.java.metamodel.* "	    
%>
<% 
UsesDef uses = (UsesDef) argument;  
InterfaceDef iface = uses.getInterface();
%>

    public Cookie connect_<%=uses.getIdentifier()%>(<%=iface.generateAbsoluteJavaName()%> localObject)
        throws ExceededConnectionLimit, 
               InvalidConnection
    {
        logger.fine("Object reference = " + localObject);
        try
        {
            if(localObject == null)
            {
                throw new InvalidConnection();
            }
            else
            {
            	    Servant servant = new <%=iface.generateAbsoluteJavaRemoteName()%>AdapterFromCorba(localObject);
                org.omg.CORBA.Object remoteObject =  componentPoa.servant_to_reference(servant);
                Components.Cookie rck = remoteInterface.connect_<%=uses.getIdentifier()%>(<%=iface.generateAbsoluteIdlName()%>Helper.narrow(remoteObject));
                Cookie ck = new CookieImpl(rck.CookieValue);
                portReceptacleMap.put(ck, localObject);
                return ck;
            }
        }
        catch (ServantNotActive e)
        {
            e.printStackTrace();
            throw new InvalidConnection();
        }
        catch (WrongPolicy e)
        {
            e.printStackTrace();
            throw new InvalidConnection();
        }
        catch(Components.ExceededConnectionLimit e)
        {
            e.printStackTrace();
            throw new ExceededConnectionLimit();
        }
        catch (Components.InvalidConnection e)
        {
            e.printStackTrace();
            throw new InvalidConnection();
        }
    }

    public <%=iface.generateAbsoluteJavaName()%> disconnect_<%=uses.getIdentifier()%>(Cookie ck)
        throws InvalidConnection
    {
        logger.fine("Cookie = " + ck);
        try
        {
            if(ck == null || !<%=uses.getIdentifier()%>ReceptacleMap.containsKey(ck))
            {
                throw new InvalidConnection();
            }
            else
            {
                Components.Cookie rck = new Components.CookieImpl(ck.getCookieValue());
                remoteInterface.disconnect_port(rck);	
                <%=iface.generateAbsoluteJavaName()%> obj = <%=uses.getIdentifier()%>ReceptacleMap.get(ck);
                <%=uses.getIdentifier()%>ReceptacleMap.remove(ck);	
                return obj;
            }
        }
        catch (Components.InvalidConnection e)
        {
            e.printStackTrace();
            throw new InvalidConnection();
        }
    }

    public Map<Cookie, <%=uses.getInterface().generateAbsoluteJavaName()%>> get_connections_<%=uses.getIdentifier()%>()
    {
        logger.fine("");
        // return a copy of the receptacle map
        return new java.util.HashMap<Cookie, <%=iface.generateAbsoluteJavaName()%>>(<%=uses.getIdentifier()%>ReceptacleMap);
    }
