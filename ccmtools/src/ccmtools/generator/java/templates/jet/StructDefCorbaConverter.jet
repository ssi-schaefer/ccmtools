<%@ jet package="ccmtools.generator.java.templates" 
	    class="StructDefCorbaConverterTemplate" 
		imports="java.util.Iterator ccmtools.generator.java.metamodel.* "	    
%>
<% StructDef struct = (StructDef) argument;  %>
/*
 * This file was automatically generated by <%=struct.generateCcmtoolsVersion()%>
 * <http://ccmtools.sourceforge.net>
 * DO NOT EDIT!
 */
 
package <%=struct.generateJavaRemoteNamespace()%>;

import ccm.local.CorbaConverterException;

<%=struct.generateJavaImportStatements(struct.generateJavaRemoteNamespace())%>

public class <%=struct.getIdentifier()%>CorbaConverter
{
    /** Convert a local Java type into a CORBA type */
    public static <%=struct.generateCorbaMapping()%> convert(<%=struct.generateJavaMapping()%> in)
        throws CorbaConverterException
    {
        <%=struct.generateCorbaMapping()%> out = new <%=struct.generateCorbaMapping()%>();

<%
for(Iterator i=struct.getFields().iterator(); i.hasNext();)
{
	FieldDef field = (FieldDef)i.next();	
%>
        out.<%=field.getIdentifier()%> = <%=field.getType().generateCorbaConverterType()%>(in.<%=field.generateGetterName()%>());
<%
}
%>
        return out;
    }


    /** Convert a CORBA type into a local Java type */
    public static <%=struct.generateJavaMapping()%> convert(<%=struct.generateCorbaMapping()%> in)
        throws CorbaConverterException
    {
        <%=struct.generateJavaMapping()%> out = new <%=struct.generateJavaMapping()%>();
<%
for(Iterator i=struct.getFields().iterator(); i.hasNext();)
{
	FieldDef field = (FieldDef)i.next();	
%>
        out.<%=field.generateSetterName()%>(<%=field.getType().generateCorbaConverterType()%>(in.<%=field.getIdentifier()%>));
<%
}
%>
        return out;
    }
};
