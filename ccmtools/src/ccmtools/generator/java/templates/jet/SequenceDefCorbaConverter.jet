<%@ jet package="ccmtools.generator.java.templates" 
	    class="SequenceDefCorbaConverterTemplate" 
		imports="ccmtools.generator.java.metamodel.* "	    
%>
<% SequenceDef seq = (SequenceDef) argument;  %>
/*
 * This file was automatically generated by <%=seq.generateCcmtoolsVersion()%>
 * <http://ccmtools.sourceforge.net>
 * DO NOT EDIT!
 */
 
package <%=seq.generateJavaRemoteNamespace()%>;

import ccm.local.CorbaConverterException;

<%=seq.generateJavaImportStatements(seq.generateJavaRemoteNamespace())%>

public class <%=seq.getIdentifier()%>CorbaConverter
{
    /** Convert a local Java type into a CORBA type */
    public static <%=seq.generateCorbaMapping()%> convert(<%=seq.generateJavaMapping()%> in)
       throws CorbaConverterException
    {
        <%=seq.generateCorbaMapping()%> out = new <%=seq.getElementType().generateCorbaMapping()%>[in.size()];
        for(int i = 0; i< in.size(); i++)
        {
            out[i] = <%=seq.getElementType().generateCorbaConverterType()%>(in.get(i));
        }
        return out;
    }


	/** Convert a CORBA type into a local Java type */
    public static <%=seq.generateJavaMapping()%> convert(<%=seq.generateCorbaMapping()%> in)
       throws CorbaConverterException
    {
        <%=seq.generateJavaMapping()%> out = new <%=seq.generateJavaMappingImpl()%>();
        for(int i = 0; i< in.length;i++)
        {
            out.add(<%=seq.getElementType().generateCorbaConverterType()%>(in[i]));
        }
        return out;
    }
};
