<%@ jet package="ccmtools.generator.java.templates" 
	    class="CcmComponentImplementationTemplate" 
		imports="java.util.Iterator ccmtools.generator.java.metamodel.* "	    
%>
<% ComponentDef component = (ComponentDef) argument; %>
/**
 * This file was automatically generated by <%=component.generateCcmtoolsVersion()%>
 * <http://ccmtools.sourceforge.net>
 * 
 * <%=component.getCcmIdentifier()%> component business logic.
 *
 * // TODO: WRITE YOUR DESCRIPTION HERE !
 *
 * @author
 * @version
 */

package <%=component.getJavaNamespace()%>;
   
/**
 * This class implements component equivalent and supported interfaces
 * as well as component attributes.
 * Additionally, session component callback methods must be implemented.
 *
 * // TODO: WRITE YOUR DESCRIPTION HERE !
 *
 * @author
 * @version
 */   
public class <%=component.getIdentifier()%>Impl 
    implements <%=component.getCcmIdentifier()%>
{
    public <%=component.getAbsoluteJavaCcmName()%>_Context ctx;
    
    public <%=component.getIdentifier()%>Impl()
    {
        // OPTIONAL: IMPLEMENT ME HERE !
    }

<%
for(Iterator i = component.getFacet().iterator(); i.hasNext();)
{
    ProvidesDef provides = (ProvidesDef)i.next();
%>
<%=provides.generateCcmProvidesGetImplementation()%>
<%
}
%>    

    public void set_session_context(ccm.local.Components.SessionContext ctx) 
        throws ccm.local.Components.CCMException
    {
        this.ctx = (<%=component.getAbsoluteJavaCcmName()%>_Context)ctx; 
    }

    public void ccm_activate() 
        throws ccm.local.Components.CCMException
    {
        // OPTIONAL: IMPLEMENT ME HERE !
    }

    public void ccm_passivate() 
        throws ccm.local.Components.CCMException
    {
        // OPTIONAL: IMPLEMENT ME HERE !
    }

    public void ccm_remove() 
        throws ccm.local.Components.CCMException
    {
        // OPTIONAL: IMPLEMENT ME HERE !
    }
}