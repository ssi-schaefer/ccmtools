<%@ jet package="ccmtools.generator.java.templates" 
	    class="HomeDefAdapterToCorbaTemplate" 
		imports="ccmtools.generator.java.metamodel.* "	    
%>
<% HomeDef home = (HomeDef) argument; %>
/*
 * This file was automatically generated by <%=home.generateCcmtoolsVersion()%>
 * <http://ccmtools.sourceforge.net>
 * DO NOT EDIT!
 */

package <%=home.generateJavaNamespace()%>;

import java.util.logging.Logger;
import ccm.local.ServiceLocator;

           
public class <%=home.getIdentifier()%>AdapterToCorba
    implements <%=home.getIdentifier()%>
{
    private Logger logger = ServiceLocator.instance().getLogger();
    
    public static final String HOME_DEFAULT_NAME = "<%=home.getIdentifier()%>:1.0";

    /** CORBA reference to the remote home */
    private String homeName;
    
    public <%=home.getIdentifier()%>AdapterToCorba()
        throws ccm.local.Components.CCMException
    {
        this(HOME_DEFAULT_NAME);
        logger.fine("");
    }
    
    public <%=home.getIdentifier()%>AdapterToCorba(String homeName)
        throws ccm.local.Components.CCMException
    {
        logger.fine("homeName = " + homeName);
        this.homeName = homeName;
    }
    
    
    public <%=home.getComponent().generateAbsoluteJavaName()%> create()
        throws ccm.local.Components.CreateFailure
    {
        logger.fine("");
        try
        {
        	Components.CCMHome ccmHome = 
        	    ccm.local.ServiceLocator.instance().findCCMHome(homeName);
        	<%=home.generateAbsoluteIdlName()%>  remoteHome = 
        	    <%=home.generateAbsoluteIdlName()%>Helper.narrow(ccmHome);
            return new <%=home.getComponent().generateAbsoluteJavaName()%>AdapterToCorba(remoteHome.create());        
        }
        catch(java.lang.Exception e)
        {
            throw new ccm.local.Components.CreateFailure();
        }
    } 
    
    public ccm.local.Components.CCMObject create_component()
        throws ccm.local.Components.CCMException, ccm.local.Components.CreateFailure
    {
        logger.fine("");
        return (ccm.local.Components.CCMObject)create();
    }
    
    
    public void remove_component(ccm.local.Components.CCMObject component)
        throws ccm.local.Components.CCMException, ccm.local.Components.RemoveFailure
    {
        logger.fine("component = " + component);
        throw new RuntimeException("Not Implemented");
    }
}