<%@ jet package="ccmtools.generator.java.templates" 
	    class="ProvidesDefApplicationClassTemplate" 
		imports="java.util.Iterator ccmtools.generator.java.metamodel.* "	    
%>
<% 
ProvidesDef provides = (ProvidesDef) argument; 
InterfaceDef iface = provides.getInterface();
%>
/**
 * This file was automatically generated by <%=iface.generateCcmtoolsVersion()%>
 * <http://ccmtools.sourceforge.net>
 * 
 * <%=iface.generateCcmIdentifier()%>Impl facet implementation.
 *
 * // TODO: WRITE YOUR DESCRIPTION HERE !
 * 
 * @author
 * @version
 */

package <%=iface.generateJavaNamespace()%>;

import ccm.local.Components.CCMException;  
                 
<%=iface.generateJavaImportStatements()%>   
 
/** 
 * This class implements a component facet's methods.
 *
 * // TODO: WRITE YOUR DESCRIPTION HERE !
 *
 * @author
 * @version
 */
public class <%=provides.getComponent().getIdentifier()%><%=provides.getIdentifier()%>Impl 
    implements <%=iface.generateAbsoluteJavaCcmName()%>
{
    /** Reference to the facet's component implementation */
    private <%=provides.getComponent().generateAbsoluteJavaName()%>Impl component;

    public <%=provides.getComponent().getIdentifier()%><%=provides.getIdentifier()%>Impl(<%=provides.getComponent().generateAbsoluteJavaName()%>Impl component)
    {
        this.component = component;
    }

<%
for(Iterator i=iface.getBaseInterfaces().iterator(); i.hasNext();)
{
	InterfaceDef baseIface = (InterfaceDef)i.next();
	for(Iterator j=baseIface.getAttributes().iterator(); j.hasNext(); )
	{
        AttributeDef attr = (AttributeDef)j.next();
%>    
<%=attr.generateApplicationDeclaration()%>
<%
    }
}
%>
<%
for(Iterator i=iface.getAttributes().iterator(); i.hasNext();)
{
    AttributeDef attr = (AttributeDef)i.next();
%>
<%=attr.generateApplicationDeclaration()%>
<%
}
%> 


    /** Business logic implementations */

<%
for(Iterator i=iface.getBaseInterfaces().iterator(); i.hasNext();)
{
	InterfaceDef baseIface = (InterfaceDef)i.next();
	for(Iterator j=baseIface.getAttributes().iterator(); j.hasNext(); )
	{
        AttributeDef attr = (AttributeDef)j.next();
%>    
<%=attr.generateApplicationImplementation()%>
<%
    }
}
%>
  
<%
for(Iterator i=iface.getAttributes().iterator(); i.hasNext();)
{
    AttributeDef attr = (AttributeDef)i.next();
%>
<%=attr.generateApplicationImplementation()%>
<%
}
%> 
    
    
<%
for(Iterator i=iface.getBaseInterfaces().iterator(); i.hasNext();)
{
	InterfaceDef baseIface = (InterfaceDef)i.next();
	for(Iterator j=baseIface.getOperations().iterator(); j.hasNext(); )
	{
        OperationDef op = (OperationDef)j.next();
%>    
<%=op.generateApplicationImplementation()%>
<%
    }
}    
%> 

<%
for(Iterator i=iface.getOperations().iterator(); i.hasNext();)
{
    OperationDef op = (OperationDef)i.next();
%>
<%=op.generateApplicationImplementation()%>
<%
}
%>
}