<%@ jet package="ccmtools.generator.java.templates" 
	    class="HomeDefAdapterLocalTemplate" 
		imports="ccmtools.generator.java.metamodel.* "	    
%>
<% HomeDef home = (HomeDef) argument; %>
/*
 * This file was automatically generated by <%=home.generateCcmtoolsVersion()%>
 * <http://ccmtools.sourceforge.net>
 * DO NOT EDIT!
 */

package <%=home.generateJavaNamespace()%>;
   
import java.util.logging.Logger;
import ccm.local.ServiceLocator;

                 
public class <%=home.getIdentifier()%>Adapter 
    implements <%=home.generateAbsoluteJavaName()%>
{
    private Logger logger = ServiceLocator.instance().getLogger();
    
    private <%=home.generateAbsoluteJavaCcmName()%> localInterface;
    private ccm.local.Components.AssemblyFactory assemblyFactory;
    
    protected <%=home.getIdentifier()%>Adapter()
    {
        this(null, null);
    }
    
    public <%=home.getIdentifier()%>Adapter(<%=home.generateAbsoluteJavaCcmName()%> localInterface)
    {
        this(localInterface, null);
    }
    
    public <%=home.getIdentifier()%>Adapter(<%=home.generateAbsoluteJavaCcmName()%> localInterface,
        ccm.local.Components.AssemblyFactory assemblyFactory)
    {
        logger.fine("localInterface = " + localInterface + ", " + assemblyFactory);
        this.localInterface = localInterface;
        this.assemblyFactory = assemblyFactory;
    }

    
    public <%=home.getComponent().generateAbsoluteJavaName()%> create()
        throws ccm.local.Components.CreateFailure
    {
        logger.fine("");
        try
        {
            <%=home.getComponent().generateAbsoluteJavaCcmName()%> c = (<%=home.getComponent().generateAbsoluteJavaCcmName()%>)localInterface.create();
            <%=home.getComponent().generateAbsoluteJavaName()%> component;
            if(assemblyFactory != null)
            {
                ccm.local.Components.Assembly assembly = assemblyFactory.create();
                component = new <%=home.getComponent().generateAbsoluteJavaName()%>Adapter(c, assembly);
                assembly.build(component);
            }
            else
            {
                component = new <%=home.getComponent().generateAbsoluteJavaName()%>Adapter(c);
            }
            return component;
        }
        catch(ccm.local.Components.CCMException e)
        {
            throw new ccm.local.Components.CreateFailure();
        }    
    }
    
    public void remove_component(ccm.local.Components.CCMObject component) 
        throws ccm.local.Components.CCMException, 
               ccm.local.Components.RemoveFailure
    {
        logger.fine("");	
        component.remove();
    }

    public ccm.local.Components.CCMObject create_component() 
        throws ccm.local.Components.CCMException, 
               ccm.local.Components.CreateFailure
    {
        logger.fine("");
        return create();
    }
}