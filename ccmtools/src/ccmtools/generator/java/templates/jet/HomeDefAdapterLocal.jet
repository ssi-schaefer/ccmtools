<%@ jet package="ccmtools.generator.java.templates" 
	    class="HomeDefAdapterLocalTemplate" 
		imports="ccmtools.generator.java.metamodel.* "	    
%>
<% HomeDef home = (HomeDef) argument; %>
/*
 * This file was automatically generated by <%=home.generateCcmtoolsVersion()%>
 * <http://ccmtools.sourceforge.net>
 * DO NOT EDIT!
 */

package <%=home.generateJavaNamespace()%>;
   
import java.util.logging.Logger;
import ccm.local.ServiceLocator;

                 
public class <%=home.getIdentifier()%>Adapter 
    implements <%=home.generateAbsoluteJavaName()%>
{
    private Logger logger = ServiceLocator.instance().getLogger();
    
    private <%=home.generateAbsoluteJavaCcmName()%> localInterface;
    
    protected <%=home.getIdentifier()%>Adapter()
    {
    }
    
    public <%=home.getIdentifier()%>Adapter(<%=home.generateAbsoluteJavaCcmName()%> localInterface)
    {
        logger.fine("localInterface = " + localInterface);
        this.localInterface = localInterface;
    }
    
    
    public <%=home.getComponent().generateAbsoluteJavaName()%> create()
        throws ccm.local.Components.CreateFailure
    {
        logger.fine("");
        try
        {
            <%=home.getComponent().generateAbsoluteJavaCcmName()%> c = 
                (<%=home.getComponent().generateAbsoluteJavaCcmName()%>)localInterface.create();
            return new <%=home.getComponent().generateAbsoluteJavaName()%>Adapter(c);
        }
        catch(ccm.local.Components.CCMException e)
        {
            throw new ccm.local.Components.CreateFailure();
        }    
    }
    
    public void remove_component(ccm.local.Components.CCMObject component) 
        throws ccm.local.Components.CCMException, 
               ccm.local.Components.RemoveFailure
    {
        logger.fine("");	
        component.remove();
    }

    public ccm.local.Components.CCMObject create_component() 
        throws ccm.local.Components.CCMException, 
               ccm.local.Components.CreateFailure
    {
        logger.fine("");
        return create();
    }
}