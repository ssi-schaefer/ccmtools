<%@ jet package="ccmtools.generator.java.templates" 
	    class="HomeDefAdapterFromCorbaTemplate" 
		imports="ccmtools.generator.java.metamodel.* "	    
%>
<% HomeDef home = (HomeDef) argument; %>
/*
 * This file was automatically generated by <%=home.generateCcmtoolsVersion()%>
 * <http://ccmtools.sourceforge.net>
 * DO NOT EDIT!
 */

package <%=home.generateJavaRemoteNamespace()%>;

<%=home.generateJavaImportStatements(home.generateJavaRemoteNamespace())%>
           
public class <%=home.getIdentifier()%>AdapterFromCorba
   extends <%=home.generateAbsoluteIdlName()%>POA
{
    /** Default logger instance */
    private java.util.logging.Logger logger = ccmtools.local.ServiceLocator.instance().getLogger();

    /** CCM session container instance */
    private ccmtools.remote.CCMSessionContainer container;

    /** Java reference to the local interface */
    private <%=home.getIdentifier()%> localHome;
    
    
    public <%=home.getIdentifier()%>AdapterFromCorba(ccmtools.remote.CCMSessionContainer container, 
        <%=home.getIdentifier()%> localHome)
    {
        logger.fine("localHome = " + localHome);
        this.container = container;
        this.localHome = localHome;
    }
    
       
    /** Home implicit operations */

    public <%=home.getComponent().generateAbsoluteIdlName()%> create () 
        throws ccmtools.corba.Components.CreateFailure
    {
        logger.fine("");
        try
        {
            <%=home.getComponent().getIdentifier()%> localComponent = localHome.create();
            org.omg.PortableServer.Servant servant = 
                new <%=home.getComponent().getIdentifier()%>AdapterFromCorba(container,localComponent);
            ccmtools.corba.Components.CCMObject obj = 
                container.getCorbaComponentFromServant(servant); 
            return <%=home.getComponent().generateAbsoluteIdlName()%>Helper.narrow(obj);
        }
        catch(Exception e)
        {
            e.printStackTrace();
            throw new ccmtools.corba.Components.CreateFailure();
        }
    }

    /** 
     * This operation is defined in the Components::KeylessCCMHome interface
     */
    public ccmtools.corba.Components.CCMObject create_component()
        throws ccmtools.corba.Components.CreateFailure
    {
        logger.fine("");
        return create();
    }


    /** Home explicit operations */
    
    /**
     * This operation is defined in the Components::CCMHome interface
     */ 
    public void remove_component(ccmtools.corba.Components.CCMObject component)
        throws ccmtools.corba.Components.RemoveFailure
    {
        logger.fine("");
        if(component == null)
        {
            throw new ccmtools.corba.Components.RemoveFailure("Can't remove component because its reference is null!");
        }
        else
        {
            component.remove();
        }
    }
}
