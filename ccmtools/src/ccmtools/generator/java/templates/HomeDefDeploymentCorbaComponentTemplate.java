package ccmtools.generator.java.templates;

import ccmtools.generator.java.metamodel.*;

public class HomeDefDeploymentCorbaComponentTemplate
{
  protected static String nl;
  public static synchronized HomeDefDeploymentCorbaComponentTemplate create(String lineSeparator)
  {
    nl = lineSeparator;
    HomeDefDeploymentCorbaComponentTemplate result = new HomeDefDeploymentCorbaComponentTemplate();
    nl = null;
    return result;
  }

  protected final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "/*" + NL + " * This file was automatically generated by ";
  protected final String TEXT_2 = NL + " * <http://ccmtools.sourceforge.net>" + NL + " * DO NOT EDIT!" + NL + " */" + NL + "" + NL + "package ";
  protected final String TEXT_3 = ";" + NL + "" + NL + "import java.util.logging.Logger;" + NL + "import ccm.local.ServiceLocator;" + NL + "import ccm.local.Components.CCMException;" + NL + "" + NL + "import org.omg.PortableServer.POA;" + NL + "import org.omg.CosNaming.NamingContextExt;" + NL + "import org.omg.CosNaming.NamingContextExtHelper;" + NL;
  protected final String TEXT_4 = NL;
  protected final String TEXT_5 = NL + "                                  " + NL + "public class ";
  protected final String TEXT_6 = "Deployment " + NL + "{" + NL + "    /** Logger */" + NL + "    private static Logger logger = ServiceLocator.instance().getLogger();" + NL + "    " + NL + "    " + NL + "    public static Components.CCMHome create()" + NL + "        throws CCMException" + NL + "    {" + NL + "        logger.fine(\"\");";
  protected final String TEXT_7 = NL + "        ";
  protected final String TEXT_8 = " localHome = (";
  protected final String TEXT_9 = ")";
  protected final String TEXT_10 = "Deployment.create();" + NL + "        return (Components.CCMHome) new ";
  protected final String TEXT_11 = "AdapterFromCorba(localHome);" + NL + "    }" + NL + "    " + NL + "    public static void deploy(String name)" + NL + "        throws CCMException" + NL + "    {" + NL + "        logger.fine(\"name = \" + name);" + NL + "        try" + NL + "        {" + NL + "            String ior = deployWithIor();" + NL + "            org.omg.CORBA.Object obj = " + NL + "                ServiceLocator.instance().getCorbaOrb().string_to_object(ior);" + NL + "            NamingContextExt ns = " + NL + "                ServiceLocator.instance().getCorbaNameService();" + NL + "            ns.rebind(ns.to_name(name), obj);" + NL + "        }" + NL + "        catch(Exception e)" + NL + "        {" + NL + "            e.printStackTrace();" + NL + "            throw new CCMException(e.getMessage());" + NL + "        }" + NL + "    }" + NL + "" + NL + "    public static String deployWithIor()" + NL + "        throws CCMException" + NL + "    {" + NL + "        logger.fine(\"\");" + NL + "        try" + NL + "        {" + NL + "            POA componentPoa = ServiceLocator.instance().createSessionComponentPoa(\"";
  protected final String TEXT_12 = "Poa\");" + NL + "            org.omg.CORBA.Object remoteHome = " + NL + "                componentPoa.servant_to_reference((";
  protected final String TEXT_13 = "AdapterFromCorba)create());        " + NL + "            return ServiceLocator.instance().getCorbaOrb().object_to_string(remoteHome);" + NL + "        }" + NL + "        catch(Exception e)" + NL + "        {" + NL + "            e.printStackTrace();" + NL + "            throw new CCMException(e.getMessage());" + NL + "        }" + NL + "    }" + NL + "    " + NL + "    public static void undeploy(String name)" + NL + "        throws CCMException" + NL + "    {" + NL + "        logger.fine(\"name = \" + name);" + NL + "        try" + NL + "        {" + NL + "            NamingContextExt ns = " + NL + "                ServiceLocator.instance().getCorbaNameService();" + NL + "            ns.unbind(ns.to_name(name));" + NL + "        }" + NL + "        catch(Exception e)" + NL + "        {" + NL + "            e.printStackTrace();" + NL + "            throw new CCMException(e.getMessage());" + NL + "        }" + NL + "    }" + NL + "}";
  protected final String TEXT_14 = NL;

  public String generate(Object argument)
  {
    StringBuffer stringBuffer = new StringBuffer();
     HomeDef home = (HomeDef) argument; 
    stringBuffer.append(TEXT_1);
    stringBuffer.append(home.generateCcmtoolsVersion());
    stringBuffer.append(TEXT_2);
    stringBuffer.append(home.generateJavaRemoteNamespace());
    stringBuffer.append(TEXT_3);
    stringBuffer.append(TEXT_4);
    stringBuffer.append(home.generateJavaImportStatements(home.generateJavaRemoteNamespace()));
    stringBuffer.append(TEXT_5);
    stringBuffer.append(home.getIdentifier());
    stringBuffer.append(TEXT_6);
    stringBuffer.append(TEXT_7);
    stringBuffer.append(home.getIdentifier());
    stringBuffer.append(TEXT_8);
    stringBuffer.append(home.getIdentifier());
    stringBuffer.append(TEXT_9);
    stringBuffer.append(home.getIdentifier());
    stringBuffer.append(TEXT_10);
    stringBuffer.append(home.getIdentifier());
    stringBuffer.append(TEXT_11);
    stringBuffer.append(home.getIdentifier());
    stringBuffer.append(TEXT_12);
    stringBuffer.append(home.getIdentifier());
    stringBuffer.append(TEXT_13);
    stringBuffer.append(TEXT_14);
    return stringBuffer.toString();
  }
}
