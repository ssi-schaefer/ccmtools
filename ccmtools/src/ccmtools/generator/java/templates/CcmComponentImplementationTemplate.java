package ccmtools.generator.java.templates;

import java.util.Iterator;
import ccmtools.generator.java.metamodel.*;

public class CcmComponentImplementationTemplate
{
  protected static String nl;
  public static synchronized CcmComponentImplementationTemplate create(String lineSeparator)
  {
    nl = lineSeparator;
    CcmComponentImplementationTemplate result = new CcmComponentImplementationTemplate();
    nl = null;
    return result;
  }

  protected final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "/**" + NL + " * This file was automatically generated by ";
  protected final String TEXT_2 = NL + " * <http://ccmtools.sourceforge.net>" + NL + " * " + NL + " * ";
  protected final String TEXT_3 = " component business logic." + NL + " *" + NL + " * // TODO: WRITE YOUR DESCRIPTION HERE !" + NL + " *" + NL + " * @author" + NL + " * @version" + NL + " */" + NL + "" + NL + "package ";
  protected final String TEXT_4 = ";" + NL + "   " + NL + "/**" + NL + " * This class implements component equivalent and supported interfaces" + NL + " * as well as component attributes." + NL + " * Additionally, session component callback methods must be implemented." + NL + " *" + NL + " * // TODO: WRITE YOUR DESCRIPTION HERE !" + NL + " *" + NL + " * @author" + NL + " * @version" + NL + " */   " + NL + "public class ";
  protected final String TEXT_5 = "Impl " + NL + "    implements ";
  protected final String TEXT_6 = NL + "{" + NL + "    public ";
  protected final String TEXT_7 = "_Context ctx;" + NL + "    " + NL + "    public ";
  protected final String TEXT_8 = "Impl()" + NL + "    {" + NL + "    \tSystem.out.println(\"+";
  protected final String TEXT_9 = "Impl.";
  protected final String TEXT_10 = "Impl()\");" + NL + "        // OPTIONAL: IMPLEMENT ME HERE !" + NL + "    }" + NL;
  protected final String TEXT_11 = NL;
  protected final String TEXT_12 = "    " + NL + "" + NL + "    public void set_session_context(ccm.local.Components.SessionContext ctx) " + NL + "        throws ccm.local.Components.CCMException" + NL + "    {" + NL + "        System.out.println(\" ";
  protected final String TEXT_13 = "Impl.set_session_context()\");" + NL + "        this.ctx = (";
  protected final String TEXT_14 = "_Context)ctx; " + NL + "    }" + NL + "" + NL + "    public void ccm_activate() " + NL + "        throws ccm.local.Components.CCMException" + NL + "    {" + NL + "        System.out.println(\" ";
  protected final String TEXT_15 = "Impl.ccm_activate()\");" + NL + "        // OPTIONAL: IMPLEMENT ME HERE !" + NL + "    }" + NL + "" + NL + "    public void ccm_passivate() " + NL + "        throws ccm.local.Components.CCMException" + NL + "    {" + NL + "        System.out.println(\" ";
  protected final String TEXT_16 = "Impl.ccm_passivate()\");" + NL + "        // OPTIONAL: IMPLEMENT ME HERE !" + NL + "    }" + NL + "" + NL + "    public void ccm_remove() " + NL + "        throws ccm.local.Components.CCMException" + NL + "    {" + NL + "        System.out.println(\" ";
  protected final String TEXT_17 = "Impl.ccm_remove()\");" + NL + "        // OPTIONAL: IMPLEMENT ME HERE !" + NL + "    }" + NL + "}";

  public String generate(Object argument)
  {
    StringBuffer stringBuffer = new StringBuffer();
     ComponentDef component = (ComponentDef) argument; 
    stringBuffer.append(TEXT_1);
    stringBuffer.append(component.generateCcmtoolsVersion());
    stringBuffer.append(TEXT_2);
    stringBuffer.append(component.getCcmIdentifier());
    stringBuffer.append(TEXT_3);
    stringBuffer.append(component.getJavaNamespace());
    stringBuffer.append(TEXT_4);
    stringBuffer.append(component.getIdentifier());
    stringBuffer.append(TEXT_5);
    stringBuffer.append(component.getCcmIdentifier());
    stringBuffer.append(TEXT_6);
    stringBuffer.append(component.getAbsoluteJavaCcmName());
    stringBuffer.append(TEXT_7);
    stringBuffer.append(component.getIdentifier());
    stringBuffer.append(TEXT_8);
    stringBuffer.append(component.getIdentifier());
    stringBuffer.append(TEXT_9);
    stringBuffer.append(component.getIdentifier());
    stringBuffer.append(TEXT_10);
    
for(Iterator i = component.getFacet().iterator(); i.hasNext();)
{
    ProvidesDef provides = (ProvidesDef)i.next();

    stringBuffer.append(TEXT_11);
    stringBuffer.append(provides.generateCcmProvidesGetImplementation());
    
}

    stringBuffer.append(TEXT_12);
    stringBuffer.append(component.getIdentifier());
    stringBuffer.append(TEXT_13);
    stringBuffer.append(component.getAbsoluteJavaCcmName());
    stringBuffer.append(TEXT_14);
    stringBuffer.append(component.getIdentifier());
    stringBuffer.append(TEXT_15);
    stringBuffer.append(component.getIdentifier());
    stringBuffer.append(TEXT_16);
    stringBuffer.append(component.getIdentifier());
    stringBuffer.append(TEXT_17);
    return stringBuffer.toString();
  }
}
