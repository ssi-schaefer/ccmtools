package ccmtools.generator.java.templates;

import java.util.Iterator;
import ccmtools.generator.java.metamodel.*;

public class CcmFacetImplementationTemplate
{
  protected static String nl;
  public static synchronized CcmFacetImplementationTemplate create(String lineSeparator)
  {
    nl = lineSeparator;
    CcmFacetImplementationTemplate result = new CcmFacetImplementationTemplate();
    nl = null;
    return result;
  }

  protected final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "/**" + NL + " * This file was automatically generated by ";
  protected final String TEXT_2 = NL + " * <http://ccmtools.sourceforge.net>" + NL + " * " + NL + " * ";
  protected final String TEXT_3 = "Impl facet implementation." + NL + " *" + NL + " * // TODO: WRITE YOUR DESCRIPTION HERE !" + NL + " * " + NL + " * @author" + NL + " * @version" + NL + " */" + NL + "" + NL + "package ";
  protected final String TEXT_4 = ";" + NL + "                 " + NL + "import ccm.local.Components.*;" + NL + " " + NL + "/** " + NL + " * This class implements a component facet's methods." + NL + " *" + NL + " * // TODO: WRITE YOUR DESCRIPTION HERE !" + NL + " *" + NL + " * @author" + NL + " * @version" + NL + " */" + NL + "public class ";
  protected final String TEXT_5 = "Impl " + NL + "    implements ";
  protected final String TEXT_6 = NL + "{" + NL + "    /** Reference to the facet's component implementation */" + NL + "    private ";
  protected final String TEXT_7 = "Impl component;" + NL + "" + NL + "    public ";
  protected final String TEXT_8 = "Impl(";
  protected final String TEXT_9 = "Impl component)" + NL + "    {" + NL + "        this.component = component;" + NL + "    }" + NL + "" + NL + "    /** Business logic implementations */" + NL + "    ";
  protected final String TEXT_10 = NL;
  protected final String TEXT_11 = NL + "}";

  public String generate(Object argument)
  {
    StringBuffer stringBuffer = new StringBuffer();
     
ProvidesDef provides = (ProvidesDef) argument; 
InterfaceDef iface = provides.getInterface();

    stringBuffer.append(TEXT_1);
    stringBuffer.append(iface.generateCcmtoolsVersion());
    stringBuffer.append(TEXT_2);
    stringBuffer.append(iface.getCcmIdentifier());
    stringBuffer.append(TEXT_3);
    stringBuffer.append(iface.getJavaNamespace());
    stringBuffer.append(TEXT_4);
    stringBuffer.append(provides.getIdentifier());
    stringBuffer.append(TEXT_5);
    stringBuffer.append(iface.getAbsoluteJavaCcmName());
    stringBuffer.append(TEXT_6);
    stringBuffer.append(provides.getComponent().getAbsoluteJavaName());
    stringBuffer.append(TEXT_7);
    stringBuffer.append(provides.getIdentifier());
    stringBuffer.append(TEXT_8);
    stringBuffer.append(provides.getComponent().getAbsoluteJavaName());
    stringBuffer.append(TEXT_9);
    
for(Iterator i=iface.getOperation().iterator(); i.hasNext();)
{
    OperationDef op = (OperationDef)i.next();

    stringBuffer.append(TEXT_10);
    stringBuffer.append(op.generateCcmOperationImplementation());
    
}

    stringBuffer.append(TEXT_11);
    return stringBuffer.toString();
  }
}
