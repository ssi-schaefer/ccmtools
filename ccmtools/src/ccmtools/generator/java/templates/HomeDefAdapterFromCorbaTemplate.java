package ccmtools.generator.java.templates;

import ccmtools.generator.java.metamodel.*;

public class HomeDefAdapterFromCorbaTemplate
{
  protected static String nl;
  public static synchronized HomeDefAdapterFromCorbaTemplate create(String lineSeparator)
  {
    nl = lineSeparator;
    HomeDefAdapterFromCorbaTemplate result = new HomeDefAdapterFromCorbaTemplate();
    nl = null;
    return result;
  }

  protected final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "/*" + NL + " * This file was automatically generated by ";
  protected final String TEXT_2 = NL + " * <http://ccmtools.sourceforge.net>" + NL + " * DO NOT EDIT!" + NL + " */" + NL + "" + NL + "package ";
  protected final String TEXT_3 = ";" + NL;
  protected final String TEXT_4 = NL;
  protected final String TEXT_5 = NL + "           " + NL + "public class ";
  protected final String TEXT_6 = "AdapterFromCorba" + NL + "   extends ";
  protected final String TEXT_7 = "POA" + NL + "{" + NL + "    /** Default logger instance */" + NL + "    private java.util.logging.Logger logger = ccmtools.local.ServiceLocator.instance().getLogger();" + NL + "" + NL + "    /** CCM session container instance */" + NL + "    private ccmtools.remote.CCMSessionContainer container;" + NL + "" + NL + "    /** Java reference to the local interface */" + NL + "    private ";
  protected final String TEXT_8 = " localHome;" + NL + "    " + NL + "    " + NL + "    public ";
  protected final String TEXT_9 = "AdapterFromCorba(ccmtools.remote.CCMSessionContainer container, ";
  protected final String TEXT_10 = NL + "        ";
  protected final String TEXT_11 = " localHome)" + NL + "    {" + NL + "        logger.fine(\"localHome = \" + localHome);" + NL + "        this.container = container;" + NL + "        this.localHome = localHome;" + NL + "    }" + NL + "    " + NL + "       " + NL + "    /** Home implicit operations */" + NL + "" + NL + "    public ";
  protected final String TEXT_12 = " create () " + NL + "        throws ccmtools.corba.Components.CreateFailure" + NL + "    {" + NL + "        logger.fine(\"\");" + NL + "        try" + NL + "        {";
  protected final String TEXT_13 = NL + "            ";
  protected final String TEXT_14 = " localComponent = localHome.create();" + NL + "            org.omg.PortableServer.Servant servant = " + NL + "                new ";
  protected final String TEXT_15 = "AdapterFromCorba(container,localComponent);" + NL + "            ccmtools.corba.Components.CCMObject obj = " + NL + "                container.getCorbaComponentFromServant(servant); " + NL + "            return ";
  protected final String TEXT_16 = "Helper.narrow(obj);" + NL + "        }" + NL + "        catch(Exception e)" + NL + "        {" + NL + "            e.printStackTrace();" + NL + "            throw new ccmtools.corba.Components.CreateFailure();" + NL + "        }" + NL + "    }" + NL + "" + NL + "    /** " + NL + "     * This operation is defined in the Components::KeylessCCMHome interface" + NL + "     */" + NL + "    public ccmtools.corba.Components.CCMObject create_component()" + NL + "        throws ccmtools.corba.Components.CreateFailure" + NL + "    {" + NL + "        logger.fine(\"\");" + NL + "        return create();" + NL + "    }" + NL + "" + NL + "" + NL + "    /** Home explicit operations */" + NL + "    " + NL + "    /**" + NL + "     * This operation is defined in the Components::CCMHome interface" + NL + "     */ " + NL + "    public void remove_component(ccmtools.corba.Components.CCMObject component)" + NL + "        throws ccmtools.corba.Components.RemoveFailure" + NL + "    {" + NL + "        logger.fine(\"\");" + NL + "        if(component == null)" + NL + "        {" + NL + "            throw new ccmtools.corba.Components.RemoveFailure(\"Can't remove component because its reference is null!\");" + NL + "        }" + NL + "        else" + NL + "        {" + NL + "            component.remove();" + NL + "        }" + NL + "    }" + NL + "}";
  protected final String TEXT_17 = NL;

  public String generate(Object argument)
  {
    final StringBuffer stringBuffer = new StringBuffer();
     HomeDef home = (HomeDef) argument; 
    stringBuffer.append(TEXT_1);
    stringBuffer.append(home.generateCcmtoolsVersion());
    stringBuffer.append(TEXT_2);
    stringBuffer.append(home.generateJavaRemoteNamespace());
    stringBuffer.append(TEXT_3);
    stringBuffer.append(TEXT_4);
    stringBuffer.append(home.generateJavaImportStatements(home.generateJavaRemoteNamespace()));
    stringBuffer.append(TEXT_5);
    stringBuffer.append(home.getIdentifier());
    stringBuffer.append(TEXT_6);
    stringBuffer.append(home.generateAbsoluteIdlName());
    stringBuffer.append(TEXT_7);
    stringBuffer.append(home.getIdentifier());
    stringBuffer.append(TEXT_8);
    stringBuffer.append(home.getIdentifier());
    stringBuffer.append(TEXT_9);
    stringBuffer.append(TEXT_10);
    stringBuffer.append(home.getIdentifier());
    stringBuffer.append(TEXT_11);
    stringBuffer.append(home.getComponent().generateAbsoluteIdlName());
    stringBuffer.append(TEXT_12);
    stringBuffer.append(TEXT_13);
    stringBuffer.append(home.getComponent().getIdentifier());
    stringBuffer.append(TEXT_14);
    stringBuffer.append(home.getComponent().getIdentifier());
    stringBuffer.append(TEXT_15);
    stringBuffer.append(home.getComponent().generateAbsoluteIdlName());
    stringBuffer.append(TEXT_16);
    stringBuffer.append(TEXT_17);
    return stringBuffer.toString();
  }
}
