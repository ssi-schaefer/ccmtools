package ccmtools.generator.java.templates;

import java.util.Iterator;
import ccmtools.generator.java.metamodel.*;

public class StructDefImplementationTemplate
{
  protected static String nl;
  public static synchronized StructDefImplementationTemplate create(String lineSeparator)
  {
    nl = lineSeparator;
    StructDefImplementationTemplate result = new StructDefImplementationTemplate();
    nl = null;
    return result;
  }

  protected final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "/*" + NL + " * This file was automatically generated by ";
  protected final String TEXT_2 = NL + " * <http://ccmtools.sourceforge.net>" + NL + " * DO NOT EDIT!" + NL + " */" + NL + "" + NL + "package ";
  protected final String TEXT_3 = ";" + NL;
  protected final String TEXT_4 = NL;
  protected final String TEXT_5 = NL + " " + NL + "public class ";
  protected final String TEXT_6 = " " + NL + "     implements java.io.Serializable" + NL + "{" + NL + "    private static final long serialVersionUID = ";
  protected final String TEXT_7 = "L;" + NL + "    ";
  protected final String TEXT_8 = NL + "    ";
  protected final String TEXT_9 = NL;
  protected final String TEXT_10 = NL;
  protected final String TEXT_11 = NL;
  protected final String TEXT_12 = NL;
  protected final String TEXT_13 = NL;
  protected final String TEXT_14 = NL;
  protected final String TEXT_15 = NL + NL + "}";

  public String generate(Object argument)
  {
    StringBuffer stringBuffer = new StringBuffer();
     StructDef struct = (StructDef) argument; 
    stringBuffer.append(TEXT_1);
    stringBuffer.append(struct.generateCcmtoolsVersion());
    stringBuffer.append(TEXT_2);
    stringBuffer.append(struct.generateJavaNamespace() );
    stringBuffer.append(TEXT_3);
    stringBuffer.append(TEXT_4);
    stringBuffer.append(struct.generateJavaImportStatements());
    stringBuffer.append(TEXT_5);
    stringBuffer.append( struct.getIdentifier() );
    stringBuffer.append(TEXT_6);
    stringBuffer.append(struct.generateSerialVersionUID());
    stringBuffer.append(TEXT_7);
    
for(Iterator i=struct.getFields().iterator(); i.hasNext();)
{
	FieldDef field = (FieldDef)i.next();

    stringBuffer.append(TEXT_8);
    stringBuffer.append(field.generateDeclaration());
    
}

    stringBuffer.append(TEXT_9);
    stringBuffer.append(TEXT_10);
    stringBuffer.append(struct.generateDefaultConstructor());
    stringBuffer.append(TEXT_11);
    stringBuffer.append(TEXT_12);
    stringBuffer.append(struct.generateConstructor());
    stringBuffer.append(TEXT_13);
    
for(Iterator i=struct.getFields().iterator(); i.hasNext();)
{
	FieldDef field = (FieldDef)i.next();

    stringBuffer.append(TEXT_14);
    stringBuffer.append(field.generateAccessors());
    
}

    stringBuffer.append(TEXT_15);
    return stringBuffer.toString();
  }
}
