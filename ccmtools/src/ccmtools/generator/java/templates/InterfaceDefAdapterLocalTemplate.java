package ccmtools.generator.java.templates;

import java.util.Iterator;
import ccmtools.generator.java.metamodel.*;

public class InterfaceDefAdapterLocalTemplate
{
  protected static String nl;
  public static synchronized InterfaceDefAdapterLocalTemplate create(String lineSeparator)
  {
    nl = lineSeparator;
    InterfaceDefAdapterLocalTemplate result = new InterfaceDefAdapterLocalTemplate();
    nl = null;
    return result;
  }

  protected final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "/*" + NL + " * This file was automatically generated by ";
  protected final String TEXT_2 = NL + " * <http://ccmtools.sourceforge.net>" + NL + " * DO NOT EDIT!" + NL + " */" + NL + "" + NL + "package ";
  protected final String TEXT_3 = ";" + NL + "                 ";
  protected final String TEXT_4 = NL;
  protected final String TEXT_5 = "                  " + NL + "                  " + NL + "public class ";
  protected final String TEXT_6 = "Adapter " + NL + "    implements ";
  protected final String TEXT_7 = NL + "{" + NL + "    private java.util.logging.Logger logger = ccmtools.local.ServiceLocator.instance().getLogger();" + NL + "    " + NL + "    private ";
  protected final String TEXT_8 = " localInterface;" + NL + "    " + NL + "    protected ";
  protected final String TEXT_9 = "Adapter()" + NL + "    {" + NL + "        logger.fine(\"\");" + NL + "    }" + NL + "" + NL + "    public ";
  protected final String TEXT_10 = "Adapter(";
  protected final String TEXT_11 = " localInterface)" + NL + "    {" + NL + "        logger.fine(\"localInterface = \" + localInterface);" + NL + "        this.localInterface = localInterface;" + NL + "    }" + NL + "    ";
  protected final String TEXT_12 = NL;
  protected final String TEXT_13 = "        " + NL + "    ";
  protected final String TEXT_14 = NL;
  protected final String TEXT_15 = "    " + NL + "    " + NL + "}";
  protected final String TEXT_16 = NL;

  public String generate(Object argument)
  {
    final StringBuffer stringBuffer = new StringBuffer();
     InterfaceDef iface = (InterfaceDef) argument; 
    stringBuffer.append(TEXT_1);
    stringBuffer.append( iface.generateCcmtoolsVersion());
    stringBuffer.append(TEXT_2);
    stringBuffer.append( iface.generateJavaNamespace() );
    stringBuffer.append(TEXT_3);
    stringBuffer.append(TEXT_4);
    stringBuffer.append(iface.generateJavaImportStatements());
    stringBuffer.append(TEXT_5);
    stringBuffer.append(iface.getIdentifier());
    stringBuffer.append(TEXT_6);
    stringBuffer.append(iface.getIdentifier());
    stringBuffer.append(TEXT_7);
    stringBuffer.append(iface.generateCcmIdentifier());
    stringBuffer.append(TEXT_8);
    stringBuffer.append(iface.getIdentifier());
    stringBuffer.append(TEXT_9);
    stringBuffer.append(iface.getIdentifier());
    stringBuffer.append(TEXT_10);
    stringBuffer.append(iface.generateCcmIdentifier());
    stringBuffer.append(TEXT_11);
    
for(Iterator i = iface.getAllAttributes().iterator(); i.hasNext(); )
{
    AttributeDef attr = (AttributeDef)i.next();

    stringBuffer.append(TEXT_12);
    stringBuffer.append(attr.generateAdapterLocal());
    	
}

    stringBuffer.append(TEXT_13);
    
for(Iterator i = iface.getAllOperations().iterator(); i.hasNext(); )
{
    OperationDef operation = (OperationDef)i.next();

    stringBuffer.append(TEXT_14);
    stringBuffer.append(operation.generateAdapterLocal());
    	
}

    stringBuffer.append(TEXT_15);
    stringBuffer.append(TEXT_16);
    return stringBuffer.toString();
  }
}
