package ccmtools.generator.java.templates;

import ccmtools.generator.java.metamodel.*;

public class SequenceDefCorbaConverterTemplate
{
  protected static String nl;
  public static synchronized SequenceDefCorbaConverterTemplate create(String lineSeparator)
  {
    nl = lineSeparator;
    SequenceDefCorbaConverterTemplate result = new SequenceDefCorbaConverterTemplate();
    nl = null;
    return result;
  }

  protected final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
  protected final String TEXT_1 = "/*" + NL + " * This file was automatically generated by ";
  protected final String TEXT_2 = NL + " * <http://ccmtools.sourceforge.net>" + NL + " * DO NOT EDIT!" + NL + " */" + NL + " " + NL + "package ";
  protected final String TEXT_3 = ";" + NL + "" + NL + "import ccm.local.CorbaConverterException;" + NL;
  protected final String TEXT_4 = NL;
  protected final String TEXT_5 = NL + NL + "public class ";
  protected final String TEXT_6 = "CorbaConverter" + NL + "{" + NL + "    /** Convert a local Java type into a CORBA type */" + NL + "    public static ";
  protected final String TEXT_7 = " convert(";
  protected final String TEXT_8 = " in)" + NL + "       throws CorbaConverterException" + NL + "    {";
  protected final String TEXT_9 = NL + "        ";
  protected final String TEXT_10 = " out = new ";
  protected final String TEXT_11 = "[in.size()];" + NL + "        for(int i = 0; i< in.size(); i++)" + NL + "        {" + NL + "            out[i] = ";
  protected final String TEXT_12 = "(in.get(i));" + NL + "        }" + NL + "        return out;" + NL + "    }" + NL + "" + NL + "" + NL + "\t/** Convert a CORBA type into a local Java type */" + NL + "    public static ";
  protected final String TEXT_13 = " convert(";
  protected final String TEXT_14 = " in)" + NL + "       throws CorbaConverterException" + NL + "    {";
  protected final String TEXT_15 = NL + "        ";
  protected final String TEXT_16 = " out = new ";
  protected final String TEXT_17 = "();" + NL + "        for(int i = 0; i< in.length;i++)" + NL + "        {" + NL + "            out.add(";
  protected final String TEXT_18 = "(in[i]));" + NL + "        }" + NL + "        return out;" + NL + "    }" + NL + "};" + NL;
  protected final String TEXT_19 = NL;

  public String generate(Object argument)
  {
    final StringBuffer stringBuffer = new StringBuffer();
     SequenceDef seq = (SequenceDef) argument;  
    stringBuffer.append(TEXT_1);
    stringBuffer.append(seq.generateCcmtoolsVersion());
    stringBuffer.append(TEXT_2);
    stringBuffer.append(seq.generateJavaRemoteNamespace());
    stringBuffer.append(TEXT_3);
    stringBuffer.append(TEXT_4);
    stringBuffer.append(seq.generateJavaImportStatements(seq.generateJavaRemoteNamespace()));
    stringBuffer.append(TEXT_5);
    stringBuffer.append(seq.getIdentifier());
    stringBuffer.append(TEXT_6);
    stringBuffer.append(seq.generateCorbaMapping());
    stringBuffer.append(TEXT_7);
    stringBuffer.append(seq.generateJavaMapping());
    stringBuffer.append(TEXT_8);
    stringBuffer.append(TEXT_9);
    stringBuffer.append(seq.generateCorbaMapping());
    stringBuffer.append(TEXT_10);
    stringBuffer.append(seq.getElementType().generateCorbaMapping());
    stringBuffer.append(TEXT_11);
    stringBuffer.append(seq.getElementType().generateCorbaConverterType());
    stringBuffer.append(TEXT_12);
    stringBuffer.append(seq.generateJavaMapping());
    stringBuffer.append(TEXT_13);
    stringBuffer.append(seq.generateCorbaMapping());
    stringBuffer.append(TEXT_14);
    stringBuffer.append(TEXT_15);
    stringBuffer.append(seq.generateJavaMapping());
    stringBuffer.append(TEXT_16);
    stringBuffer.append(seq.generateJavaMappingImpl());
    stringBuffer.append(TEXT_17);
    stringBuffer.append(seq.getElementType().generateCorbaConverterType());
    stringBuffer.append(TEXT_18);
    stringBuffer.append(TEXT_19);
    return stringBuffer.toString();
  }
}
