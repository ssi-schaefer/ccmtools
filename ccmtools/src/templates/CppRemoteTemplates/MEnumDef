/*
 * This file was automatically generated by %(CcmToolsVersion)s 
 * <http://ccmtools.sourceforge.net>
 * DO NOT EDIT! 
 *
 * CORBA converter for enum %(Identifier)s (header file)
 */

#ifndef __ENUM_CONVERTER_%(PreprocIdentifier)s__H__
#define __ENUM_CONVERTER_%(PreprocIdentifier)s__H__

#ifdef HAVE_CONFIG_H
#  include <config.h>
#endif 

#ifdef HAVE_MICO 

%(CorbaDebugInclude)s

#include <iostream>
#include <sstream>

#include <%(StubsIncludeNamespace)s%(Identifier)s.h>
#include <%(LocalIncludeNamespace)s/%(Identifier)s.h>

%(OpenNamespace)s

void 
convertFromCorba(const %(CorbaStubName)s& in, %(LocalName)s& out);

void 
convertToCorba(const %(LocalName)s& in, %(CorbaStubName)s& out);

#ifdef WXDEBUG
inline
std::string 
ccmDebug(const %(CorbaStubName)s& in, int indent = 0)
{
    std::ostringstream os;
    os << ::ccm::local::doIndent(indent);
    switch(in) {    
%(EnumMembersDebug)s
    }   
    os << ":%(CorbaStubName)s";
    return os.str(); 
}
#endif // WXDEBUG 

%(CloseNamespace)s

#endif // HAVE_MICO
#endif // __ENUM_CONVERTER_%(PreprocIdentifier)s__H__

<<<<<<<SPLIT>>>>>>>
/*
 * This file was automatically generated by %(CcmToolsVersion)s 
 * <http://ccmtools.sourceforge.net>
 * DO NOT EDIT! 
 *
 * CORBA converter for enum %(Identifier)s (implementation file)
 */
 
#ifdef HAVE_CONFIG_H
#  include <config.h>
#endif 

#ifdef HAVE_MICO 

#include <wamas/platform/utils/debug.h>

#include <ccm/remote/PrimitiveConverter.h>
#include "%(Identifier)s_remote.h"

%(OpenNamespace)s

using namespace std;

void 
convertFromCorba(const %(CorbaStubName)s& in, %(LocalName)s& out)
{
    LDEBUGNL(CCM_CONTAINER," convertFromCorba(%(CorbaStubName)s)");

    switch(in) {
%(MembersFromCorba)s
    }
} 


void 
convertToCorba(const %(LocalName)s& in, %(CorbaStubName)s& out)
{
    LDEBUGNL(CCM_CONTAINER," convertToCorba(%(CorbaStubName)s)");

    switch(in) {
%(MembersToCorba)s
    }
} 

%(CloseNamespace)s

#endif // HAVE_MICO


