void 
%(ComponentType)s_impl::connect_%(Identifier)s(%(IdlUsesType)s_ptr value)
    throw(::ccmtools::corba::Components::AlreadyConnected, 
          ::ccmtools::corba::Components::InvalidConnection )	
{
    reference_for_receptacle_%(Identifier)s = %(IdlUsesType)s::_duplicate (value);

    %(UsesType)s::SmartPtr %(Identifier)s_adapter = 
        %(UsesType)s::SmartPtr(dynamic_cast< %(UsesType)s* >(
	            new %(UsesConvertNamespace)s%(InterfaceType)sAdapterToCorba(
	                 reference_for_receptacle_%(Identifier)s)));

    try 
    {
        local_adapter->connect_%(Identifier)s(%(Identifier)s_adapter);
    }
    catch(const ::Components::AlreadyConnected&) 
    {
        throw ::ccmtools::corba::Components::AlreadyConnected();
    }
    catch(const ::Components::InvalidConnection&) 
    {
        throw ::ccmtools::corba::Components::InvalidConnection();
    }
}

%(IdlUsesType)s_ptr 
%(ComponentType)s_impl::disconnect_%(Identifier)s()
    throw(::ccmtools::corba::Components::NoConnection)
{
    try 
    {
        local_adapter->disconnect_%(Identifier)s();
    }
    catch(const ::Components::NoConnection&) 
    {
        throw ::ccmtools::corba::Components::NoConnection();
    }
    
    %(IdlUsesType)s_var _res = %(IdlUsesType)s::_duplicate(
        reference_for_receptacle_%(Identifier)s);
    reference_for_receptacle_%(Identifier)s = %(IdlUsesType)s::_nil();
    return _res._retn();
}

%(IdlUsesType)s_ptr 
%(ComponentType)s_impl::get_connection_%(Identifier)s()
    throw(::ccmtools::corba::Components::NoConnection)
{
    if(reference_for_receptacle_%(Identifier)s == NULL)
        throw ::ccmtools::corba::Components::NoConnection();
    return %(IdlUsesType)s::_duplicate(reference_for_receptacle_%(Identifier)s);
}


