/*
 * This file was automatically generated by %(CcmToolsVersion)s 
 * <http://ccmtools.sourceforge.net>
 * DO NOT EDIT! 
 *
 * CORBA converter for struct %(Identifier)s (header file)
 */

#ifndef __STRUCT_CONVERTER_%(PreprocIdentifier)s__H__
#define __STRUCT_CONVERTER_%(PreprocIdentifier)s__H__

#ifdef HAVE_CONFIG_H
#  include <config.h>
#endif 

#ifdef HAVE_MICO 

%(CorbaDebugInclude)s

#include <iostream>
#include <sstream>

#include <%(StubsIncludeNamespace)s%(Identifier)s.h>
#include <%(LocalIncludeNamespace)s%(Identifier)s.h>

%(MFieldDefInclude)s

namespace CCM_Remote {

void 
convertFromCorba(const %(CorbaStubName)s& in, %(LocalName)s& out);

void 
convertToCorba(const %(LocalName)s& in, %(CorbaStubName)s& out);

#ifdef WXDEBUG
inline
std::string
ccmDebug(const %(CorbaStubName)s& in, int indent = 0)
{
    std::ostringstream os;
    os << CCM_Local::doIndent(indent) << "struct %(Identifier)s" << std::endl;
    os << CCM_Local::doIndent(indent) << "{" << std::endl;
    %(MFieldDefDebug)s
    os << CCM_Local::doIndent(indent) << "}";
    return os.str();
}
#endif // WXDEBUG 

} // /namespace CCM_Remote

#endif // HAVE_MICO
#endif // __STRUCT_CONVERTER_%(PreprocIdentifier)s__H__



<<<<<<<SPLIT>>>>>>>
/*
 * This file was automatically generated by %(CcmToolsVersion)s 
 * <http://ccmtools.sourceforge.net>
 * DO NOT EDIT! 
 *
 * CORBA converter for struct %(Identifier)s (implementation file)
 */

#ifdef HAVE_CONFIG_H
#  include <config.h>
#endif 

#ifdef HAVE_MICO 

#include <WX/Utils/debug.h> 

#include <CCM_Remote/PrimitiveConverter.h>
#include "%(Identifier)s_remote.h"

using namespace std;

namespace CCM_Remote {

void 
convertFromCorba(const %(CorbaStubName)s& in, %(LocalName)s& out)
{
    LDEBUGNL(CCM_CONTAINER," convertFromCorba(%(CorbaStubName)s)");
%(MFieldDefFromCorba)s
} 

void 
convertToCorba(const %(LocalName)s& in, %(CorbaStubName)s& out)
{
    LDEBUGNL(CCM_CONTAINER," convertToCorba(%(CorbaStubName)s)");
%(MFieldDefToCorba)s
} 

} // /namespace CCM_Remote
#endif // HAVE_MICO

