/**
 * %(CCMProvidesType)s facet class definition.
 *
 * // TODO: WRITE YOUR DESCRIPTION HERE! 
 *
 * @author
 * @version 
 *
 * This class implements a facet's methods and attributes.
 **/

#ifndef __FACET__%(PreprocIdentifier)s__H__
#define __FACET__%(PreprocIdentifier)s__H__

#include <%(ProvidesInclude)s.h>
#include "%(ComponentType)s_impl.h"

%(OpenNamespace)s

class %(Identifier)s_impl
    : virtual public %(CCMProvidesType)s
{
  protected:
    %(FullComponentType)s_impl* component;
%(MAttributeDefVariable)s

  public:
    %(Identifier)s_impl(%(FullComponentType)s_impl* component_impl);
    virtual ~%(Identifier)s_impl();
%(MAttributeProvidesPrototype)s
%(MOperationProvidesPrototype)s
};

%(CloseNamespace)s

#endif // __FACET__%(PreprocIdentifier)s__H__

<<<<<<<SPLIT>>>>>>>
/**
 * %(CCMProvidesType)s facet class implementation. 
 *
 * // TODO: WRITE YOUR DESCRIPTION HERE! 
 *
 * @author
 * @version 
 *
 * This class implements a facet's methods and attributes.
 **/

#include <cassert>
#include <iostream>
#include <WX/Utils/debug.h>

#include "%(ComponentType)s_%(Identifier)s_impl.h"

using namespace std;
using namespace WX::Utils;

%(OpenNamespace)s

%(Identifier)s_impl::%(Identifier)s_impl(%(FullComponentType)s_impl* component_impl)
  : component(component_impl)
{
    DEBUGNL("+%(Identifier)s_impl->%(Identifier)s_impl()");

    // OPTIONAL : IMPLEMENT ME HERE !
}

%(Identifier)s_impl::~%(Identifier)s_impl()
{
    DEBUGNL ( "-%(Identifier)s_impl->~%(Identifier)s_impl (  )" );

    // OPTIONAL : IMPLEMENT ME HERE !
}

%(MAttributeProvidesAdapterImplDefinition)s
%(MOperationProvidesAdapterImplDefinition)s

%(CloseNamespace)s