/*
 * This file was automatically generated by CCM Tools version 0.7.0
 * <http://ccmtools.sourceforge.net>
 * DO NOT EDIT!
 */

package application.ccm.remote;

import java.util.logging.Logger;

import ccm.local.ServiceLocator;
import ccm.remote.CCMSessionContainer;

import org.omg.PortableServer.Servant;

import application.ccm.local.CCM_ServerHome;
import application.ccm.local.Server;
import application.ccm.local.ServerHome;

           
public class ServerHomeAdapterFromCorba
   extends application.ServerHomePOA
{
    /** Default logger instance */
    private Logger logger = ServiceLocator.instance().getLogger();

    /** CCM session container instance */
    private CCMSessionContainer container;

    /** Java reference to the local interface */
    private ServerHome localHome;
    
    
    public ServerHomeAdapterFromCorba(CCMSessionContainer container, 
        ServerHome localHome)
    {
        logger.fine("localHome = " + localHome);
        this.container = container;
        this.localHome = localHome;
    }
    
       
    /** Home implicit operations */

    public application.Server create () 
        throws Components.CreateFailure
    {
        logger.fine("");
        try
        {
            Server localComponent = localHome.create();
            Servant servant = 
                new ServerAdapterFromCorba(container,localComponent);
            Components.CCMObject obj = 
                container.getCorbaComponentFromServant(servant); 
            return application.ServerHelper.narrow(obj);
        }
        catch(Exception e)
        {
            e.printStackTrace();
            throw new Components.CreateFailure();
        }
    }

    /** 
     * This operation is defined in the Components::KeylessCCMHome interface
     */
    public Components.CCMObject create_component()
        throws Components.CreateFailure
    {
        logger.fine("");
        return create();
    }


    /** Home explicit operations */
    
    /**
     * This operation is defined in the Components::CCMHome interface
     */ 
    public void remove_component(Components.CCMObject component)
        throws Components.RemoveFailure
    {
        logger.fine("");
        if(component == null)
        {
            throw new Components.RemoveFailure("Can't remove component because its reference is null!");
        }
        else
        {
            component.remove();
        }
    }
}
