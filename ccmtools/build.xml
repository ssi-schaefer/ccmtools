<project name="ccmtools" default="install" basedir=".">

  	<!--
  	     Define properties that are used in the following tasks.
         Note that a property can be set from command-line: ant -Dprefix=/usr/local
  	-->
  	<property name="src" location="src" />
  	<property name="src-gen" location="src-gen" />
  	<property name="src-test" location="src-test" />
  	<property name="idl" location="idl" />
  	<property name="bin" location="bin" />
  	<property name="lib" location="lib" />
 	<property name="etc" location="etc" />
  	<property name="doc" location="doc" />
  	<property name="build" location="build-ant" />
  	<property name="prefix" location="dist" />
  	<property name="test" location="test" />


  	<!-- Define different paths that are used in the following tasks -->

	<path id="compile.classpath">
  		<pathelement path="${lib}/commons-cli-1.0.jar" />
  		<pathelement path="${lib}/java-cup-11a.jar" />
  		<pathelement path="${lib}/antlr.jar" />
  		<pathelement path="${lib}/jdom.jar" />
  		<pathelement path="${lib}/junit.jar" />
  	  	<pathelement path="${lib}/xstream-1.2.jar" />
  		<pathelement path="${lib}/xpp3_min-1.1.2.4.0.jar" />
		<pathelement path="${build}/classes" />
  	</path>


  	<!-- Set up directories for the build process -->

	<target name="init" >
      	<mkdir dir="${src-gen}" />
  		<mkdir dir="${build}" />
      	<mkdir dir="${build}/classes" />
        <delete file="${lib}/assembly.jar" />
  	</target>


  	<!-- Generate IDL3 parser source code using ANTLR -->

	<target name="generate.IDL3Parser" depends="init">
      	<antlr target="${src}/ccmtools/parser/idl3/idl3new.g"
      		      dir="${src}/ccmtools/parser/idl3" >
           	<classpath refid="compile.classpath" />
      	</antlr>
  	</target>


	<!-- Generate IDL parser source code using JFlex+Cup -->

	<target name="generate.IdlScanner" depends="init">
		<java jar="${lib}/JFlex.jar" fork="true">
			<arg line = "-d ${src-gen}/ccmtools/parser/idl ${src}/ccmtools/parser/idl/idlscanner.flex" />
		</java>
  	</target>

	<target name="generate.IdlParser" depends="init">
		<java jar="${lib}/java-cup-11a.jar" fork="true">
			<arg line = "-destdir ${src-gen}/ccmtools/parser/idl -package ccmtools.parser.idl -parser IdlParser ${src}/ccmtools/parser/idl/idlparser.cup" />
		</java>
  	</target>


    <!-- Generate assembly parser source code using JFlex+Cup -->

    <target name="generate.AssemblyLexer" depends="init">
        <java jar="${lib}/JFlex.jar" fork="true">
            <arg line = "-d ${src-gen}/ccmtools/parser/assembly ${src}/ccmtools/parser/assembly/assembly.flex" />
        </java>
    </target>

    <target name="generate.AssemblyParser" depends="init">
        <java jar="${lib}/java-cup-11a.jar" fork="true">
            <arg line = "-destdir ${src-gen}/ccmtools/parser/assembly -parser AssemblyParser ${src}/ccmtools/parser/assembly/assembly.cup" />
        </java>
    </target>

    <target name="compile.AssemblyMain" depends="generate.AssemblyLexer, generate.AssemblyParser">
        <javac srcdir="${src}/ccmtools/parser/assembly:${src-gen}/ccmtools/parser/assembly"
               destdir="${build}/classes"
               debug="on" source="1.5" target="1.5" verbose="off">
            <classpath refid="compile.classpath" />
        </javac>
    </target>

    <target name="jar.AssemblyMain" depends="compile.AssemblyMain">
        <jar jarfile="${lib}/assembly.jar"
             basedir="${build}/classes"
             includes="ccmtools/parser/assembly/**">
            <manifest>
                <attribute name="Main-Class" value="ccmtools.parser.assembly.Main" />
            </manifest>
        </jar>
    </target>


	<!-- Compile ccmtools source code -->

	<target name="compile.ccmtools" depends="generate.IDL3Parser, generate.IdlScanner, generate.IdlParser"
     	description="Compile the ccmtools package." >
      	<javac srcdir="${src}/ccmtools:${src-gen}" destdir="${build}/classes"
      		  	debug="on" source="1.5" target="1.5" verbose="off">
          	<classpath refid="compile.classpath" />
      	</javac>
  	</target>


  	<!-- Create Java archive file from all package. -->
	<target name="jar.ccmtools" depends="compile.ccmtools"
     	description="Create Java archive file from ccmtools package." >
      	<jar jarfile="${lib}/ccmtools.jar" basedir="${build}/classes" >
         	<manifest>
            	<attribute name="Main-Class" value="ccmtools.UI.ConsoleCodeGenerator" />
         	</manifest>
      	</jar>
  	</target>


  	<!-- Install ccmtools -->

	<target name="install"  depends="jar.ccmtools" description="Install ccmtools to prefix/.">
      	<mkdir dir="${prefix}" />

  		<copy todir="${prefix}/lib" overwrite="true"> <fileset dir="${lib}"/> </copy>
      	<copy todir="${prefix}/templates" overwrite="true"> <fileset dir="${src}/templates"/> </copy>
      	<copy todir="${prefix}/idl" overwrite="true"> <fileset dir="${idl}"/> </copy>
      	<copy todir="${prefix}/etc" overwrite="true"> <fileset dir="${etc}"/> </copy>

      	<copy todir="${prefix}/bin" overwrite="true"> <fileset dir="${bin}"/> </copy>
  		<exec executable="chmod"> <arg value="+x"/> <arg value="${prefix}/bin/ccmtools"/>      </exec>
  		<exec executable="chmod"> <arg value="+x"/> <arg value="${prefix}/bin/ccmjava"/>       </exec>
  		<exec executable="chmod"> <arg value="+x"/> <arg value="${prefix}/bin/ccmidl"/>        </exec>
  		<exec executable="chmod"> <arg value="+x"/> <arg value="${prefix}/bin/ccmmodel"/>      </exec>
  		<exec executable="chmod"> <arg value="+x"/> <arg value="${prefix}/bin/ccmconfix"/>     </exec>
  		<exec executable="chmod"> <arg value="+x"/> <arg value="${prefix}/bin/ccmns"/>         </exec>
  		<exec executable="chmod"> <arg value="+x"/> <arg value="${prefix}/bin/ccmdescriptor"/> </exec>
      	<exec executable="chmod"> <arg value="+x"/> <arg value="${prefix}/bin/ccmtools-idl"/>  </exec>
  	</target>


  	<!-- Generate JavaDoc -->

	<target name="javadoc" depends="javadoc.ccmtools, javadoc.uml2idl"/>

	<target name="javadoc.ccmtools" description="Generate javadoc for the ccmtools package.">
      	<javadoc packagenames="ccmtools.*" sourcepath="${src}" destDir="${prefix}/javadoc/ccmtools">
      	</javadoc>
  	</target>

	<target name="javadoc.uml2idl" description="Generate javadoc for the uml_parser and uml2idl package.">
	    <javadoc packagenames="uml_parser, uml2idl" 	sourcepath="${src}" destDir="${prefix}/javadoc/uml2idl">
	    </javadoc>
	</target>


  	<!-- Run test cases -->

	<target name="test" depends="compile.tests, test.idl.parser, test.java.components, test.cpp.components"/>

  	<target name="compile.tests" depends="compile.ccmtools" >
      	<javac srcdir="${src}/ccmtools:${src-test}" destdir="${build}/classes"
      		  	debug="on" source="1.5" target="1.5" verbose="off">
          	<classpath refid="compile.classpath" />
      	</javac>
  	</target>

  	<target name="test.idl.parser"  >
     	<junit printsummary="true" haltonfailure="true" showoutput="true">
          	<classpath refid="compile.classpath" />
	  		<formatter type="brief" />
	  		<test name="ccmtools.parser.idl.IdlParserTestSuite" />
     	</junit>
  	</target>

	<target name="test.java.components"  >
     	<junit printsummary="true" haltonfailure="true" showoutput="true">
          	<classpath refid="compile.classpath" />
	  		<formatter type="brief" />
	  		<test name="ccmtools.generator.java.JavaComponentsTestSuite" />
     	</junit>
  	</target>

	<target name="test.cpp.components"  >
     	<junit printsummary="true" haltonfailure="true" showoutput="true">
          	<classpath refid="compile.classpath" />
	  		<formatter type="brief" />
	  		<test name="ccmtools.generator.cpp.CppComponentsTestSuite" />
     	</junit>
  	</target>


	<!-- Clean up -->

  	<target name="clean" description="Clean up the build and lib directory." >

      	<delete file="${src}/${PACKAGE}/Constants.java" />

      	<delete file="${src}/ccmtools/parser/idl3/Idl3Lexer.java" />
      	<delete file="${src}/ccmtools/parser/idl3/Idl3Parser.java" />
      	<delete file="${src}/ccmtools/parser/idl3/Idl3TokenTypes.java" />
      	<delete file="${src}/ccmtools/parser/idl3/Idl3TokenTypes.txt" />

  		<delete dir="${src}/uml_parser" />
      	<delete dir="${src-gen}" />
      	<delete dir="${build}" />
      	<delete dir="${test}/CppRemoteGenerator/sandbox" />
      	<delete file="${lib}/ccmtools.jar" />
  	</target>

</project>
