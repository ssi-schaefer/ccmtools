<project name="ccmtools" default="ccmtools.jar">

  <description>

  </description>

  <!-- Define properties that are used in the following tasks.
       Note that a property can be set from command-line:
          $ ant -Dprefix=/usr/local
  -->
  <property name="src" location="../" />
  <property name="build" location="build" />
  <property name="lib" location="lib" />
  <property name="doc" location="doc" />
  <property name="prefix" location="dist" />
  <property name="sandbox" location="test/CppGenerator/sandbox" />


  <!-- Define different paths that are used in the following tasks -->
  <path id="compile.classpath">
      <pathelement location="${lib}/antlr.jar" />
  </path>

  <path id="run.classpath">
      <fileset dir="${lib}">
          <include name="*.jar" />
      </fileset>	  
      <pathelement path="${java.class.path}" />
      <pathelement location="${lib}/antlr.jar" />
  </path>



  <!-- Set up directories for the build process -->
  <target name="init"
      description="Creates the build directory and deletes the old jar files." >
      <mkdir dir="${build}" />
      <mkdir dir="${sandbox}" /> 
  </target>  


  <!-- Generate parser source code using ANTLR -->

  <target name="IDL3ParserGenerator" depends="init"
     description="Generate the idl3_parser using antlr." >
      <antlr target="${src}/ccmtools/IDL3Parser/idl3.g" dir="${src}/IDL3Parser" >
           <classpath refid="compile.classpath" />
      </antlr>
  </target>

  
  <!-- Compile whole ccmtools source code -->
  <target name="ccmtools" depends="IDL3ParserGenerator"
     description="Compile whole ccmtools code." >
      <javac srcdir="${src}/ccmtools" destdir="${build}" debug="on" >
          <classpath refid="compile.classpath" />  
      </javac>
  </target>

  <target name="ccmtools.jar" depends="ccmtools"
     description="Package ccmtools class files into ccmtools.jar." >
      <jar jarfile="${lib}/ccmtools.jar" basedir="${build}" >
         <manifest>
            <attribute name="Main-Class" value="ccmtools.UI.ConsoleCodeGenerator" />
         </manifest>
      </jar>
  </target>


  <!-- Run test cases -->
  <target name="test" 
     description="" >
     <junit printsummary="yes" haltonfailure="yes" showoutput="yes">
          <classpath refid="run.classpath" />
	  <formatter type="brief" />
	  <test name="ccmtools.test.CppGenerator.CppGeneratorTest" />
     </junit>

     <exec executable="confix.py" >
         <arg value="--packageroot=${sandbox}" />
	 <arg value="--bootstrap" />
	 <arg value="--configure" />
	 <arg value="--make" />
	 <arg value="--targets=check" />
     </exec>
  </target>
  

  <!-- Create JavaDoc -->
  <target name="doc" 
      description="Generates javadoc for the ccmtools package.">
      <javadoc packagenames="ccmtools.*"
               sourcepath="${src}"
	       destDir="${doc}/javadoc">
      </javadoc>
  </target>


  <!-- Install java-environment -->
  <target name="install"  depends="ccmtools.jar" 
      description="Install java-environment to prefix/.">
      <mkdir dir="${prefix}" />
      <copy file="${lib}/antlr.jar"    todir="${prefix}/lib"  overwrite="true" />       
      <copy file="${lib}/mdr01.jar"    todir="${prefix}/lib"  overwrite="true" />       
      <copy file="${lib}/jdom.jar"     todir="${prefix}/lib"  overwrite="true" />       

      <copy file="${lib}/dtd2java.jar" todir="${prefix}/lib"  overwrite="true" />       
      <copy file="${lib}/uml2idl.jar"  todir="${prefix}/lib"  overwrite="true" />       
  </target>


  <!-- Clean up -->

  <target name="clean"
      description="Clean up the build and lib directory." >
      <delete file="${src}/IDL3Parser/IDL3Lexer.java" />
      <delete file="${src}/IDL3Parser/IDL3Parser.java" />
      <delete file="${src}/IDL3Parser/IDL3TokenTypes.java" />
      <delete file="${src}/IDL3Parser/IDL3TokenTypes.txt" />

      <delete dir="${build}" /> 
      <delete dir="${sandbox}" /> 
      <delete dir="${doc}/javadoc" /> 

      <delete file="${lib}/ccmtools.jar" /> 
  </target>

</project>
