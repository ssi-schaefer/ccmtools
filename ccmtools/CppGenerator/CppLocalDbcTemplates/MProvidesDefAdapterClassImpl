//==============================================================================
// Local facet DbC adapter implementation
//==============================================================================

DbC_%(Identifier)sFacetAdapter::DbC_%(Identifier)sFacetAdapter(%(ComponentType)s* c, CCM_%(ComponentType)s* lc)
{
  static const char* DbC_FUNCTION_NAME =
    "DbC_%(Identifier)sFacetAdapter::DbC_%(Identifier)sFacetAdapter(%(ComponentType)s*, CCM_%(ComponentType)s*)";
  DEBUGNL("+DbC_%(Identifier)sFacetAdapter->DbC_%(Identifier)sFacetAdapter()");
  component = c;
  local_component = lc;
  ValidConnection = true;  
  facet = local_component->get_%(Identifier)s();
  DbC_check_invariant(DbC_FUNCTION_NAME,true);
}

DbC_%(Identifier)sFacetAdapter::~DbC_%(Identifier)sFacetAdapter()
{
  DEBUGNL ( "-DbC_%(Identifier)sFacetAdapter->~DbC_%(Identifier)sFacetAdapter()" );
}

void DbC_%(Identifier)sFacetAdapter::DbC_check_invariant(const char* DbC_FUNCTION_NAME, bool DbC_onExit) throw(CCM_OCL::OclException)
{
%(InvariantInvocation)s
}

%(MOperationProvidesAdapterDefinition)s



