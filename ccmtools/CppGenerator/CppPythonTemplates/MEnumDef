//==============================================================================
// %(Identifier)s - python conversion prototypes
//==============================================================================

#ifndef __CCM_TEST__PYTHON__%(PreprocIdentifier)s__H__
#define __CCM_TEST__PYTHON__%(PreprocIdentifier)s__H__

#include "%(Identifier)s.h"

#include <Python.h>

%(OpenNamespace)s

PyObject *convert_%(Identifier)s_to_python           (       %(Identifier)s  arg );
PyObject *convert_const_%(Identifier)s_to_python     ( const %(Identifier)s  arg );
PyObject *convert_const_%(Identifier)s_ref_to_python ( const %(Identifier)s& arg );

%(Identifier)s  convert_%(Identifier)s_from_python     ( PyObject *arg );
%(Identifier)s *convert_%(Identifier)s_ptr_from_python ( PyObject *arg );

%(CloseNamespace)s

#endif

<<<<<<<SPLIT>>>>>>>
//==============================================================================
// %(Identifier)s - python conversion implementation
//==============================================================================

#include "%(Identifier)s_python.h"

%(OpenNamespace)s

PyObject *
convert_%(Identifier)s_to_python ( %(Identifier)s arg )
{ return convert_long_to_python ( (long) arg ); }

PyObject *
convert_const_%(Identifier)s_to_python ( const %(Identifier)s arg )
{ return convert_const_long_to_python ( (const long) arg ); }

PyObject *
convert_const_%(Identifier)s_ref_to_python ( const %(Identifier)s& arg )
{ return convert_const_long_ref_to_python ( (const long&) arg ); }

%(Identifier)s
convert_%(Identifier)s_from_python ( PyObject *arg )
{ return convert_long_from_python ( arg ); }

%(Identifier)s *
convert_%(Identifier)s_ptr_from_python ( PyObject *arg )
{ return convert_long_ptr_from_python ( arg ); }

%(CloseNamespace)s



