#! /usr/bin/env python

## ccmtools-c++-install : C++ component installation script
## Leif Johnson <leif@ambient.2y.net>
## copyright (c) 2002-2003 Salomon Automation
##
## $Id$
##
## This program is free software; you can redistribute it and/or modify it unde
## the terms of the GNU General Public License as published by the Free Softwar
## Foundation; either version 2 of the License, or (at your option) any later
## version.
##
## This program is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
## FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
## details.
##
## You should have received a copy of the GNU General Public License along with
## this program; if not, write to the Free Software Foundation, Inc., 59 Temple
## Place - Suite 330, Boston, MA 02111-1307, USA.

import os, sys

SOURCE_DIR = ''
CCMTOOLS_PACKAGE = 'ccmtools-package'
if 'CCMTOOLS_PACKAGE' in os.environ.keys():
    CCMTOOLS_PACKAGE = os.environ['CCMTOOLS_PACKAGE']

USAGE = '''Usage: ccmtools-c++-install [OPTION]...

Install C++ components and test components.

Options:
    -h, --help                 Print out this help
    -p NAME, --package=NAME    Install the package named NAME [%s]
    -s DIR, --source=DIR       Use DIR as the source for component code
                               [./<PACKAGE-NAME>]
    -V, --version              Print out ccmtools version information

The environment variable CCMTOOLS_PACKAGE can also be used to set the package
name.''' % CCMTOOLS_PACKAGE

## handle arguments.

index = 1
while index < len(sys.argv):
    arg = sys.argv[index]
    index += 1

    if arg == '-h' or arg.startswith('--h'): print USAGE; sys.exit(0)
    elif arg == '-p': CCMTOOLS_PACKAGE = sys.argv[index]; index += 1
    elif arg.startswith('--p') and arg.find('=') > 0:
        CCMTOOLS_PACKAGE = arg.split('=')[1]

    elif arg == '-s': SOURCE_DIR = sys.argv[index]; index += 1
    elif arg.startswith('--s') and arg.find('=') > 0:
        SOURCE_DIR = arg.split('=')[1]

    elif arg == '-V' or arg.startswith('--v'):
        os.execlp('ccmtools-generate', 'ccmtools-generate', '--version')

## check for a valid source directory.

SOURCE_DIR = SOURCE_DIR or CCMTOOLS_PACKAGE
if (sys.platform[:3] == 'win' and not SOURCE_DIR[1:3] == ':\\') or \
       not SOURCE_DIR.startswith(os.sep):
    SOURCE_DIR = os.path.join(os.getcwd(), SOURCE_DIR)

if not os.path.isdir(SOURCE_DIR):
    print 'No component source was found in %s.' % SOURCE_DIR
    print 'You might need to generate the components first with'
    print '"ccmtools-c++-generate", and build them with "ccmtools-c++-make".'
    sys.exit(1)

## run confix to install components.

confix_flags  = ' --packageroot="%s" --profile="ccmtools"' % SOURCE_DIR
confix_flags += ' --configfile="%s"' % os.path.join(SOURCE_DIR, 'confix.conf')
confix_flags += ' --make --targets="install"'

sys.exit(os.system('confix.py ' + confix_flags))
