
/**
 * This file was automatically generated by CCM Tools version 0.6.0
 * <http://ccmtools.sourceforge.net/>
 *
 * wamas::ccm::local::CCM_UserTypeInterface facet class implementation. 
 *
 * // TODO: WRITE YOUR DESCRIPTION HERE! 
 *
 * @author
 * @version 
 **/

#include <cassert>
#include <iostream>
#include <WX/Utils/debug.h>

#include "Test_userTypeIn_impl.h"

using namespace std;
using namespace WX::Utils;

namespace wamas {
namespace ccm {
namespace local {
namespace component {
namespace Test {

userTypeIn_impl::userTypeIn_impl(
    wamas::ccm::local::component::Test::CCM_Test_impl* component_impl)
  : component(component_impl)
{
    // OPTIONAL : IMPLEMENT ME HERE !
}

userTypeIn_impl::~userTypeIn_impl()
{
    // OPTIONAL : IMPLEMENT ME HERE !
}

wamas::ccm::local::Person
userTypeIn_impl::f2(
        const wamas::ccm::local::Person& p1,
        wamas::ccm::local::Person& p2,
        wamas::ccm::local::Person& p3)
throw(::ccm::local::Components::CCMException)
{
  return component->ctx->get_connection_userTypeOut()->f2(p1, p2, p3);
  //    Person r;
  //    r.name = p1.name + p2.name;
  //    r.id = p1.id + p2.id;
  //    p3=p2;
  //    p2=p1;
  //    return r;
}

wamas::ccm::local::StringList
userTypeIn_impl::f5(
        const wamas::ccm::local::StringList& p1,
        wamas::ccm::local::StringList& p2,
        wamas::ccm::local::StringList& p3)
throw(::ccm::local::Components::CCMException)
{
  return component->ctx->get_connection_userTypeOut()->f5(p1, p2, p3);
  //    StringList r;
  //    for(unsigned long i=0;i<p1.size();i++) {
  //      r.push_back("Test");
  //      p3.push_back(p2.at(i));
  //      p2.at(i) = p1.at(i);
  //    }
  //    return r;
}

} // /namespace Test
} // /namespace component
} // /namespace local
} // /namespace ccm
} // /namespace wamas
