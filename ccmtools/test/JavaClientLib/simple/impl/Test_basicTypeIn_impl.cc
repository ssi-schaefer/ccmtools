
/**
 * This file was automatically generated by CCM Tools version 0.6.0
 * <http://ccmtools.sourceforge.net/>
 *
 * wamas::ccm::local::CCM_BasicTypeInterface facet class implementation. 
 *
 * // TODO: WRITE YOUR DESCRIPTION HERE! 
 *
 * @author
 * @version 
 **/

#include <cassert>
#include <iostream>
#include <WX/Utils/debug.h>

#include "Test_basicTypeIn_impl.h"

using namespace std;
using namespace WX::Utils;

namespace wamas {
namespace ccm {
namespace local {
namespace component {
namespace Test {

basicTypeIn_impl::basicTypeIn_impl(
    wamas::ccm::local::component::Test::CCM_Test_impl* component_impl)
  : component(component_impl)
{
    // OPTIONAL : IMPLEMENT ME HERE !
}

basicTypeIn_impl::~basicTypeIn_impl()
{
    // OPTIONAL : IMPLEMENT ME HERE !
}

long
basicTypeIn_impl::f2(
        const long p1,
        long& p2,
        long& p3)
throw(::ccm::local::Components::CCMException)
{
    return component->ctx->get_connection_basicTypeOut()->f2(p1, p2, p3);

    //    p3=p2;
    //    p2=p1;
    //    return p3+p1;
}

std::string
basicTypeIn_impl::f8(
        const std::string& p1,
        std::string& p2,
        std::string& p3)
throw(::ccm::local::Components::CCMException)
{
    return component->ctx->get_connection_basicTypeOut()->f8(p1, p2, p3);

    //    p3=p2;
    //    p2=p1;
    //    return p3+p1;
}

} // /namespace Test
} // /namespace component
} // /namespace local
} // /namespace ccm
} // /namespace wamas
