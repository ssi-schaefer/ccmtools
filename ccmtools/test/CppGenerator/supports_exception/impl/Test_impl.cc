
/***
 * Test component business logic implementation.
 * 
 * // TODO: WRITE YOUR DESCRIPTION HERE! 
 *
 * @author
 * @version 
 *
 * This file structure was automatically generated by CCM Tools
 * <http://ccmtools.sourceforge.net/> and contains a component's
 * implementation classes. 
 ***/

#include <cassert>
#include <iostream>

#include "Test_impl.h"

using namespace std;
using namespace wamas::platform::utils;


//==============================================================================
// CCM_Test - component implementation
//==============================================================================

Test_impl::Test_impl()
{
}

Test_impl::~Test_impl()
{
}

long
Test_impl::print(const std::string& msg)
    throw (::Components::CCMException, Error, SuperError, FatalError )
{
    cout << ">> " << msg << endl;

    if(msg == "Error") {
        Error error;
        ErrorInfoList error_info_list;
        ErrorInfo error_info;
        error_info.code = 7;
        error_info.message = "A simple error!";
        error_info_list.push_back(error_info);
        error.info = error_info_list;
        throw error;
    }

    if(msg == "SuperError")
        throw SuperError();

    if(msg == "FatalError")
        throw FatalError();

    return msg.length();
}

void
Test_impl::set_session_context(
    ::Components::SessionContext* context)
    throw(::Components::CCMException)
{
    ctx = dynamic_cast<ccm::local::CCM_Test_Context*>(context);
}

void
Test_impl::ccm_activate()
    throw(::Components::CCMException)
{
    // OPTIONAL : IMPLEMENT ME HERE !
}

void
Test_impl::ccm_passivate()
    throw(::Components::CCMException)
{
    // OPTIONAL : IMPLEMENT ME HERE !
}

void
Test_impl::ccm_remove()
    throw(::Components::CCMException)
{
    // OPTIONAL : IMPLEMENT ME HERE !
}


