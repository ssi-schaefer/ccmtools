
/***
 * Cpu component business logic definition.
 * 
 * // TODO: WRITE YOUR DESCRIPTION HERE! 
 *
 * @author
 * @version 
 *
 * This file structure was automatically generated by CCM Tools
 * <http://ccmtools.sourceforge.net/> and defines a component's
 * implementation classes. 
 ***/

#ifndef __COMPONENT_CCM_Local_SimpleComputer_CCM_Session_Cpu_Cpu_APP__H__
#define __COMPONENT_CCM_Local_SimpleComputer_CCM_Session_Cpu_Cpu_APP__H__

#include <CCM_Local/SimpleComputer/CCM_Session_Cpu/Cpu_share.h>

namespace CCM_Local {
namespace SimpleComputer {
namespace CCM_Session_Cpu {

/**
 * Cpu component class 
 *
 * // TODO: WRITE YOUR DESCRIPTION HERE! 
 *
 * @author
 * @version 
 *
 * This class implements a component's equivalent and supported interfaces
 * as well as component attributes. Additionally, session component callback 
 * methods must be implemented.  
 **/
class CCM_Cpu_impl
  : public CCM_Cpu
{
 private:

 public:
  CCM_Cpu_Context* ctx;

  CCM_Cpu_impl (  );
  virtual ~CCM_Cpu_impl (  );

  virtual CCM_ProgrammingInterface* get_prg (  );

  void boot() 
    throw (LocalComponents::CCMException);

  void shutdown() 
    throw (LocalComponents::CCMException);

  // Callback methods

  virtual void set_session_context ( LocalComponents::SessionContext* ctx )
    throw ( LocalComponents::CCMException );
  virtual void ccm_activate (  )
    throw ( LocalComponents::CCMException );
  virtual void ccm_passivate (  )
    throw ( LocalComponents::CCMException );
  virtual void ccm_remove (  )
    throw ( LocalComponents::CCMException );
};

/**
 * CCM_Cpu facet class 
 *
 * // TODO: WRITE YOUR DESCRIPTION HERE! 
 *
 * @author
 * @version 
 *
 * This class implements a facet's methods and attributes.
 **/
class prg_impl
  : public CCM_ProgrammingInterface
{
 private:
  CCM_Cpu_impl* component;
  std::string line_;

 public:
  prg_impl ( CCM_Cpu_impl* component_impl );
  virtual ~prg_impl (  );

  virtual long execute_cmd(const std::string& cmd) 
    throw (LocalComponents::CCMException);

};

} // /namespace CCM_Session_Cpu
} // /namespace SimpleComputer
} // /namespace CCM_Local

#endif

