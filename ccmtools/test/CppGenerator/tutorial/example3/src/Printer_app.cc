
/***
 * Printer component business logic implementation.
 * 
 * // TODO: WRITE YOUR DESCRIPTION HERE! 
 *
 * @author
 * @version 
 *
 * This file structure was automatically generated by CCM Tools
 * <http://ccmtools.sourceforge.net/> and contains a component's
 * implementation classes. 
 ***/

#include <cassert>
#include <iostream>
#include <WX/Utils/debug.h>

#include "Printer_app.h"

using namespace std;
using namespace WX::Utils;
using namespace CCM_Local;

namespace CCM_Local {
namespace SimpleComputer {
namespace CCM_Session_Printer {

//==============================================================================
// CCM_Printer - component implementation
//==============================================================================

CCM_Printer_impl::CCM_Printer_impl (  )
{
  DEBUGNL ( "+CCM_Printer_impl->CCM_Printer_impl (  )" );
}

CCM_Printer_impl::~CCM_Printer_impl (  )
{
  DEBUGNL ( "-CCM_Printer_impl->~CCM_Printer_impl (  )" );
}

std::string
CCM_Printer_impl::Type (  )
  throw ( LocalComponents::CCMException )
{
  DEBUGNL ( " CCM_Printer_impl->Type (  )" );
  return Type_;
}

void
CCM_Printer_impl::Type ( const std::string value )
  throw ( LocalComponents::CCMException )
{
  DEBUGNL ( " CCM_Printer_impl->Type (  )" );
  Type_ = value;
}

void
CCM_Printer_impl::set_session_context ( LocalComponents::SessionContext* context )
  throw ( LocalComponents::CCMException )
{
  DEBUGNL ( " CCM_Printer_impl->set_session_context (  )" );
  ctx = dynamic_cast<CCM_Printer_Context*> ( context );
}

void
CCM_Printer_impl::ccm_activate (  )
  throw ( LocalComponents::CCMException )
{
  DEBUGNL ( " CCM_Printer_impl->ccm_activate (  )" );
}

void
CCM_Printer_impl::ccm_passivate (  )
  throw ( LocalComponents::CCMException )
{
  DEBUGNL ( " CCM_Printer_impl->ccm_passivate (  )" );
}

void
CCM_Printer_impl::ccm_remove (  )
  throw ( LocalComponents::CCMException )
{
  DEBUGNL ( " CCM_Printer_impl->ccm_remove (  )" );
}

//==============================================================================
// CCM_OutputDeviceConnector facet implementation
//==============================================================================

CCM_OutputDeviceConnector*
CCM_Printer_impl::get_connector (  )
{
  DEBUGNL ( " CCM_Printer_impl->get_connector (  )" );
  connector_impl* facet = new connector_impl(this);
  return dynamic_cast<CCM_OutputDeviceConnector*> ( facet );
}

connector_impl::connector_impl ( CCM_Printer_impl* component_impl )
  : component ( component_impl )
{
  DEBUGNL ( "+connector_impl->connector_impl (  )" );
}

connector_impl::~connector_impl (  )
{
  DEBUGNL ( "-connector_impl->~connector_impl (  )" );
}

long
connector_impl::write ( const std::string& msg )
  throw (LocalComponents::CCMException)
{
  DEBUGNL ( " connector_impl->write ( msg )" );
  cout << "Printer[" << component->Type() << "]: " << msg << endl;
  return 0;
}

} // /namespace CCM_Session_Printer
} // /namespace SimpleComputer
} // /namespace CCM_Local

