
/***
 * Test_mirror component business logic implementation.
 * 
 * // TODO: WRITE YOUR DESCRIPTION HERE! 
 *
 * @author
 * @version 
 *
 * This file structure was automatically generated by CCM Tools
 * <http://ccmtools.sourceforge.net/> and contains a component's
 * implementation classes. 
 ***/

#include <cassert>
#include <iostream>
#include <WX/Utils/debug.h>

#include "Test_mirror_impl.h"

using namespace std;
using namespace WX::Utils;
using namespace CCM_Local;

namespace CCM_Local {
namespace CCM_Session_Test_mirror {

//==============================================================================
// CCM_Test_mirror - component implementation
//==============================================================================

CCM_Test_mirror_impl::CCM_Test_mirror_impl()
{
    DEBUGNL("+CCM_Test_mirror_impl->CCM_Test_mirror_impl()");
}

CCM_Test_mirror_impl::~CCM_Test_mirror_impl()
{
    DEBUGNL("-CCM_Test_mirror_impl->~CCM_Test_mirror_impl()");
}

void
CCM_Test_mirror_impl::set_session_context(
    LocalComponents::SessionContext* context)
    throw(LocalComponents::CCMException)
{
    DEBUGNL(" CCM_Test_mirror_impl->set_session_context()");
    ctx = dynamic_cast<CCM_Test_mirror_Context*>(context);
}

void
CCM_Test_mirror_impl::ccm_activate()
    throw(LocalComponents::CCMException)
{
    DEBUGNL(" CCM_Test_mirror_impl->ccm_activate()");

    {
      const long maxSize = 10;
      ctx->get_connection_console_mirror()->max_size(maxSize);
      assert(ctx->get_connection_console_mirror()->max_size() == maxSize);
    }

    {
      const string msg = "12345";
      long result = ctx->get_connection_console_mirror()->print(msg);
      cout << msg.length() << ", " << result << endl;
      assert(result == msg.length());
    }

    {
      const string msg = "1234567890123";
      long result = ctx->get_connection_console_mirror()->print(msg);
      cout << msg.length() << ", " << result << endl;
      assert(result == ctx->get_connection_console_mirror()->max_size());
    }
}

void
CCM_Test_mirror_impl::ccm_passivate()
    throw(LocalComponents::CCMException)
{
    DEBUGNL(" CCM_Test_mirror_impl->ccm_passivate()");

    // OPTIONAL : IMPLEMENT ME HERE !
}

void
CCM_Test_mirror_impl::ccm_remove()
    throw(LocalComponents::CCMException)
{
    DEBUGNL(" CCM_Test_mirror_impl->ccm_remove()");

    // OPTIONAL : IMPLEMENT ME HERE !
}

} // /namespace CCM_Session_Test_mirror
} // /namespace CCM_Local

