
/**
 * This file was automatically generated by CCM Tools version 0.5.3-pre1
 * <http://ccmtools.sourceforge.net/>
 *
 * CCM_AnyTest facet class implementation. 
 *
 * // TODO: WRITE YOUR DESCRIPTION HERE! 
 *
 * @author
 * @version 
 **/

#include <cassert>
#include <iostream>
#include <WX/Utils/debug.h>

#include <WX/Utils/value_simple.h>

#include "Test_any_test_impl.h"

using namespace std;
using namespace WX::Utils;

namespace CCM_Local {
namespace CCM_Session_Test {

any_test_impl::any_test_impl(CCM_Local::CCM_Session_Test::CCM_Test_impl* component_impl)
  : component(component_impl)
{
    // OPTIONAL : IMPLEMENT ME HERE !
}

any_test_impl::~any_test_impl()
{
    // OPTIONAL : IMPLEMENT ME HERE !
}

WX::Utils::SmartPtr<WX::Utils::Value> 
any_test_impl::op1(
    const WX::Utils::SmartPtr<WX::Utils::Value> & p1, 
    WX::Utils::SmartPtr<WX::Utils::Value> & p2, 
    WX::Utils::SmartPtr<WX::Utils::Value> & p3)
    throw (LocalComponents::CCMException)
{
    // TODO : IMPLEMENT ME HERE !
}

anyList
any_test_impl::op2(const anyList& p1, anyList& p2, anyList& p3)
    throw (LocalComponents::CCMException)
{
    // TODO : IMPLEMENT ME HERE !
}

pair
any_test_impl::op3(const pair& p1, pair& p2, pair& p3)
    throw (LocalComponents::CCMException)
{
  p3=p2;
  p2=p1;
  
  
  CCM_Local::pair result;
  result.name = "keyresult";
  SmartPtr<Value> vr(new IntValue(2));
  result.value = vr; 

  return result;
}

} // /namespace CCM_Session_Test
} // /namespace CCM_Local
