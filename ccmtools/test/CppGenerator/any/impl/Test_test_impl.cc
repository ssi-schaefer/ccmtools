
/**
 * This file was automatically generated by CCM Tools 
 * <http://ccmtools.sourceforge.net/>
 *
 * CCM_AnyTest facet implementation. 
 *
 * // TODO: WRITE YOUR DESCRIPTION HERE! 
 *
 * @author
 * @version 
 **/

#include <cassert>
#include <iostream>

#include <wamas/platform/utils/value_simple.h>

#include "Test_test_impl.h"

using namespace std;
using namespace wamas::platform::utils;

Test_test_impl::Test_test_impl(Test_impl* component_impl)
  : component(component_impl)
{
    // OPTIONAL : IMPLEMENT ME HERE !
}

Test_test_impl::~Test_test_impl()
{
    // OPTIONAL : IMPLEMENT ME HERE !
}

wamas::platform::utils::SmartPtr<Value> 
Test_test_impl::op1(
        const wamas::platform::utils::SmartPtr<Value > & p1,
        wamas::platform::utils::SmartPtr<Value> & p2,
        wamas::platform::utils::SmartPtr<Value> & p3)
throw(Components::CCMException)
{
  	p3=p2;
  	p2=p1;
  	return p1;
}

AnyList
Test_test_impl::op2(const AnyList& p1, AnyList& p2, AnyList& p3)
throw(Components::CCMException)
{
  	p3=p2;
  	p2=p1;
	return p1;
}

Pair
Test_test_impl::op3(const Pair& p1, Pair& p2, Pair& p3)
throw(Components::CCMException)
{ 
  	p3=p2;
  	p2=p1;
	return p1;
}

