
/***
 * Test component business logic implementation.
 * 
 * // TODO: WRITE YOUR DESCRIPTION HERE! 
 *
 * @author
 * @version 
 *
 * This file structure was automatically generated by CCM Tools
 * <http://ccmtools.sourceforge.net/> and contains a component's
 * implementation classes. 
 ***/

#include <cassert>
#include <iostream>
#include <WX/Utils/debug.h>

#include "Test_impl.h"

using namespace std;
using namespace WX::Utils;
using namespace CCM_Local;

namespace CCM_Local {
namespace CCM_Session_Test {

//==============================================================================
// CCM_Test - component implementation
//==============================================================================

CCM_Test_impl::CCM_Test_impl (  )
{
  DEBUGNL ( "+CCM_Test_impl->CCM_Test_impl (  )" );
}

CCM_Test_impl::~CCM_Test_impl (  )
{
  DEBUGNL ( "-CCM_Test_impl->~CCM_Test_impl (  )" );
}

void
CCM_Test_impl::set_session_context ( LocalComponents::SessionContext* context )
  throw ( LocalComponents::CCMException )
{
  DEBUGNL ( " CCM_Test_impl->set_session_context (  )" );
  ctx = dynamic_cast<CCM_Test_Context*> ( context );
}

void
CCM_Test_impl::ccm_activate (  )
  throw ( LocalComponents::CCMException )
{
  DEBUGNL ( " CCM_Test_impl->ccm_activate (  )" );

  WX::Utils::SmartPtr<CCM_InterfaceType> receptacle = 
    ctx->get_connection_a_receptacle();
  string str1 = "Hallo to first op()";
  long size1 = receptacle->op1(str1);
  assert(size1 == str1.length());

  string str2 = "Hallo to second op()";
  long size2 = receptacle->op2(str2);
  assert(size2 == str2.length());

  string str3 = "Hallo to third op()";
  long size3 = receptacle->op3(str3);
  assert(size3 == str3.length());
}

void
CCM_Test_impl::ccm_passivate (  )
  throw ( LocalComponents::CCMException )
{
  DEBUGNL ( " CCM_Test_impl->ccm_passivate (  )" );
}

void
CCM_Test_impl::ccm_remove (  )
  throw ( LocalComponents::CCMException )
{
  DEBUGNL ( " CCM_Test_impl->ccm_remove (  )" );
}

} // /namespace CCM_Session_Test
} // /namespace CCM_Local

