/* test case : receptacle types */

typedef long time_t;

enum Color {red, green, blue, black, orange};

struct Value {
  string s;
  double dd;
};

typedef sequence<Value> map;

typedef double doubleArray[10];
typedef long   longMatrix[5][5];

interface iface { long println(in string s); };

interface Console {
  /* basic types */
  short println1(in short p1, inout short p2, out short p3);
  long println2(in long p1, inout long p2, out long p3);
  unsigned short println3(in unsigned short p1, inout unsigned short p2, out unsigned short p3);
  unsigned long println4(in unsigned long p1, inout unsigned long p2, out unsigned long p3);
  float println5(in float p1, inout float p2, out float p3);
  double println6(in double p1, inout double p2, out double p3);
  char println7(in char p1, inout char p2, out char p3);
  string println8(in string p1, inout string p2, out string p3);
  boolean println9(in boolean p1, inout boolean p2, out boolean p3);
  octet println10(in octet p1, inout octet p2, out octet p3);

  /* complex types */
  time_t foo1(in time_t p1, inout time_t p2, out time_t p3);
  Color  foo2(in Color p1, inout Color p2, out Color p3);
  Value  foo3(in Value p1, inout Value p2, out Value p3);
  map  foo4(in map p1, inout map p2, out map p3);
  doubleArray foo5(in doubleArray p1, inout doubleArray p2, out doubleArray p3);
  longMatrix foo6(in longMatrix p1, inout longMatrix p2, out longMatrix p3);

  /* interface types */
  //  iface operate(in iface i1, inout iface i2, out iface i3);
};

component Hello { uses Console console; };

home HelloHome manages Hello { };

