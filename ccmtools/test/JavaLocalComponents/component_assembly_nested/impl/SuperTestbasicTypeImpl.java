/**
 * This file was automatically generated by CCM Tools
 * <http://ccmtools.sourceforge.net>
 * 
 * CCM_BasicTypeInterfaceImpl facet implementation.
 *
 * // TODO: WRITE YOUR DESCRIPTION HERE !
 * 
 * @author
 * @version
 */

package world;

import Components.*;

/**
 * This class implements a component facet's methods.
 *  // TODO: WRITE YOUR DESCRIPTION HERE !
 * 
 * @author
 * @version
 */
public class SuperTestbasicTypeImpl implements world.CCM_BasicTypeInterface
{
    /** Reference to the facet's component implementation */
    private world.SuperTestImpl component;

    public SuperTestbasicTypeImpl(world.SuperTestImpl component)
    {
        this.component = component;
    }

    /** Business logic implementations */

    public short f1(short p1, Holder<Short> p2, Holder<Short> p3) throws CCMException
    {
        try
        {
            return component.ctx.get_connection_innerBasicType().f1(p1, p2, p3);
        }
        catch (java.lang.Exception e)
        {
            e.printStackTrace();
            throw new CCMException(e.getMessage(), CCMExceptionReason.SYSTEM_ERROR);
        }
    }

    public int f2(int p1, Holder<Integer> p2, Holder<Integer> p3) throws CCMException
    {

        try
        {
            return component.ctx.get_connection_innerBasicType().f2(p1, p2, p3);
        }
        catch (java.lang.Exception e)
        {
            e.printStackTrace();
            throw new CCMException(e.getMessage(), CCMExceptionReason.SYSTEM_ERROR);
        }
    }

    public short f3(short p1, Holder<Short> p2, Holder<Short> p3) throws CCMException
    {
        try
        {
            return component.ctx.get_connection_innerBasicType().f3(p1, p2, p3);
        }
        catch (java.lang.Exception e)
        {
            e.printStackTrace();
            throw new CCMException(e.getMessage(), CCMExceptionReason.SYSTEM_ERROR);
        }
    }

    public int f4(int p1, Holder<Integer> p2, Holder<Integer> p3) throws CCMException
    {
        try
        {
            return component.ctx.get_connection_innerBasicType().f4(p1, p2, p3);
        }
        catch (java.lang.Exception e)
        {
            e.printStackTrace();
            throw new CCMException(e.getMessage(), CCMExceptionReason.SYSTEM_ERROR);
        }
    }

    public float f5(float p1, Holder<Float> p2, Holder<Float> p3) throws CCMException
    {
        try
        {
            return component.ctx.get_connection_innerBasicType().f5(p1, p2, p3);
        }
        catch (java.lang.Exception e)
        {
            e.printStackTrace();
            throw new CCMException(e.getMessage(), CCMExceptionReason.SYSTEM_ERROR);
        }
    }

    public double f6(double p1, Holder<Double> p2, Holder<Double> p3) throws CCMException
    {
        try
        {
            return component.ctx.get_connection_innerBasicType().f6(p1, p2, p3);
        }
        catch (java.lang.Exception e)
        {
            e.printStackTrace();
            throw new CCMException(e.getMessage(), CCMExceptionReason.SYSTEM_ERROR);
        }
    }

    public char f7(char p1, Holder<Character> p2, Holder<Character> p3) throws CCMException
    {
        try
        {
            return component.ctx.get_connection_innerBasicType().f7(p1, p2, p3);
        }
        catch (java.lang.Exception e)
        {
            e.printStackTrace();
            throw new CCMException(e.getMessage(), CCMExceptionReason.SYSTEM_ERROR);
        }
    }

    public String f8(String p1, Holder<String> p2, Holder<String> p3) throws CCMException
    {
        try
        {
            return component.ctx.get_connection_innerBasicType().f8(p1, p2, p3);
        }
        catch (java.lang.Exception e)
        {
            e.printStackTrace();
            throw new CCMException(e.getMessage(), CCMExceptionReason.SYSTEM_ERROR);
        }
    }

    public boolean f9(boolean p1, Holder<Boolean> p2, Holder<Boolean> p3) throws CCMException
    {
        try
        {
            return component.ctx.get_connection_innerBasicType().f9(p1, p2, p3);
        }
        catch (java.lang.Exception e)
        {
            e.printStackTrace();
            throw new CCMException(e.getMessage(), CCMExceptionReason.SYSTEM_ERROR);
        }
    }

    public byte f10(byte p1, Holder<Byte> p2, Holder<Byte> p3) throws CCMException
    {
        try
        {
            return component.ctx.get_connection_innerBasicType().f10(p1, p2, p3);
        }
        catch (java.lang.Exception e)
        {
            e.printStackTrace();
            throw new CCMException(e.getMessage(), CCMExceptionReason.SYSTEM_ERROR);
        }
    }

}
