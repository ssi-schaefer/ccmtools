/***
 * CCM Tools Test Client 
 *
 * This file was automatically generated by CCM Tools
 *         <http://ccmtools.sourceforge.net/>
 *
 * This test client is part of the remote component test concept. 
 ***/

#ifdef HAVE_CONFIG_H
#  include <config.h>
#endif 

#ifdef HAVE_MICO 

#include <cstdlib> 
#include <iostream>
#include <string>

#include <ccmtools/remote/CCMContainer.h>

#include <CORBA.h>
#include <coss/CosNaming.h>

#include <application_ServerHome_entry.h>
#include <ccmtools/remote/application/ServerHome_remote.h>
#include <ccmtools_corba_application_Server.h>

using namespace std;

//==============================================================================
// Implementation of remote client test
//==============================================================================

int main (int argc, char *argv[])
{
    cout << "Enter C++ remote test client" << endl;

    // Initialize ORB 
    int   argc_   = 3;
    char* argv_[] = { "", "-ORBInitRef", "NameService=corbaloc:iiop:1.2@localhost:5050/NameService"}; 
    cout << "args = [" << argv_[1] << ", " << argv_[2] << "]" << endl;
    CORBA::ORB_var orb = CORBA::ORB_init(argc_, argv_);


    /**
     * Server-side code
     */ 

    // Register all value type factories with the ORB  
	::ccmtools::remote::register_all_factories(orb);

    // Deploy local and remote component homes	
    int error = 0;
    error += deploy_application_ServerHome("ServerHome");
    error += deploy_ccmtools_remote_application_ServerHome(orb, "ServerHome");
    if(!error) {
        cout << "ServerHome server is running..." << endl;
    }
    else {
        cerr << "ERROR: Can't deploy components!" << endl;
        return -1;
    }

    orb->run();

    // Un-Deployment
    cout << "Exit C++ remote test client" << endl; 	
}

#endif // HAVE_MICO

