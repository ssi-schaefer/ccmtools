
/***
 * This file was automatically generated by 
 * <http://ccmtools.sourceforge.net/>
 *
 * CarRental component business logic definition.
 * 
 * // TODO: WRITE YOUR DESCRIPTION HERE! 
 *
 * @author
 * @version 
 ***/

#ifndef __COMPONENT_CCM_Local_BigBusiness_CCM_Session_CarRental_CarRental_IMPL__H__
#define __COMPONENT_CCM_Local_BigBusiness_CCM_Session_CarRental_CarRental_IMPL__H__

#include <CCM_Local/BigBusiness/CCM_Session_CarRental/CarRental_share.h>

namespace CCM_Local {
namespace BigBusiness {
namespace CCM_Session_CarRental {

/**
 * This class implements a component's equivalent and supported interfaces
 * as well as component attributes. Additionally, session component callback 
 * methods must be implemented.  
 *
 * CarRental component class 
 *
 * // TODO: WRITE YOUR DESCRIPTION HERE! 
 *
 * @author
 * @version 
 **/
class CCM_CarRental_impl
    : virtual public CCM_CarRental
{
  private:

  public:
    CCM_CarRental_Context* ctx;

    CCM_CarRental_impl();
    virtual ~CCM_CarRental_impl();

    virtual CCM_CustomerMaintenance* get_maintenance();
    virtual CCM_CustomerBusiness* get_business();

    // Use std::vector as a dummy database
    std::vector<CCM_Local::BigBusiness::Customer> CustomerDB;

    // Callback methods

    virtual void set_session_context(LocalComponents::SessionContext* ctx)
        throw(LocalComponents::CCMException);
    virtual void ccm_activate()
        throw(LocalComponents::CCMException);
    virtual void ccm_passivate()
        throw(LocalComponents::CCMException);
    virtual void ccm_remove()
        throw(LocalComponents::CCMException);
};

} // /namespace CCM_Session_CarRental
} // /namespace BigBusiness
} // /namespace CCM_Local

#endif

