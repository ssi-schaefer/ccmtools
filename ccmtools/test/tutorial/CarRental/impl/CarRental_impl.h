
/***
 * This file was automatically generated by CCM Tools version 0.5.3-pre3
 * <http://ccmtools.sourceforge.net/>
 *
 * CarRental component business logic definition.
 * 
 * // TODO: WRITE YOUR DESCRIPTION HERE! 
 *
 * @author
 * @version 
 ***/

#ifndef __COMPONENT_BigBusiness_ccm_local_component_CarRental_CarRental_IMPL__H__
#define __COMPONENT_BigBusiness_ccm_local_component_CarRental_CarRental_IMPL__H__

#include <BigBusiness/ccm/local/component/CarRental/CarRental_share.h>

namespace BigBusiness {
namespace ccm {
namespace local {
namespace component {
namespace CarRental {

/**
 * This class implements a component's equivalent and supported interfaces
 * as well as component attributes. Additionally, session component callback 
 * methods must be implemented.  
 *
 * CarRental component class 
 *
 * // TODO: WRITE YOUR DESCRIPTION HERE! 
 *
 * @author
 * @version 
 **/
class CCM_CarRental_impl
    : virtual public CCM_CarRental
{
  private:

  public:
    CCM_CarRental_Context* ctx;

    // Use std::vector as a dummy database
    std::vector<BigBusiness::ccm::local::Customer> CustomerDB;

    CCM_CarRental_impl();
    virtual ~CCM_CarRental_impl();

    virtual BigBusiness::ccm::local::CCM_CustomerMaintenance* get_maintenance();
    virtual BigBusiness::ccm::local::CCM_CustomerBusiness* get_business();

    // CCM callback methods
    virtual void set_session_context(::ccm::local::Components::SessionContext* ctx)
        throw(::ccm::local::Components::CCMException);
    virtual void ccm_activate()
        throw(::ccm::local::Components::CCMException);
    virtual void ccm_passivate()
        throw(::ccm::local::Components::CCMException);
    virtual void ccm_remove()
        throw(::ccm::local::Components::CCMException);
};

} // /namespace CarRental
} // /namespace component
} // /namespace local
} // /namespace ccm
} // /namespace BigBusiness

#endif

