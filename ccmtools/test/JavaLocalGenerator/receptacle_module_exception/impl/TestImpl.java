/**
 * This file was automatically generated by CCM Tools version 0.6.3
 * <http://ccmtools.sourceforge.net>
 * 
 * CCM_Test component business logic.
 *
 * // TODO: WRITE YOUR DESCRIPTION HERE !
 *
 * @author
 * @version
 */

package world.europe.austria.ccm.local;
   
/**
 * This class implements component equivalent and supported interfaces
 * as well as component attributes.
 * Additionally, session component callback methods must be implemented.
 *
 * // TODO: WRITE YOUR DESCRIPTION HERE !
 *
 * @author
 * @version
 */   
public class TestImpl 
    implements CCM_Test
{
    public world.europe.austria.ccm.local.CCM_Test_Context ctx;
    
    public TestImpl()
    {
        // OPTIONAL: IMPLEMENT ME HERE !
    }
    

    public void set_session_context(ccm.local.Components.SessionContext ctx) 
        throws ccm.local.Components.CCMException
    {
        this.ctx = (world.europe.austria.ccm.local.CCM_Test_Context)ctx; 
    }

    public void ccm_activate() 
        throws ccm.local.Components.CCMException
    {
	try
        {
            System.out.println(">> Receptacle exceptions test ...");
            world.europe.austria.ccm.local.IFace iface = ctx.get_connection_iface();
	    
	    try
	    {
		int result = iface.foo("0123456789");
		assert(result == 10);
	    }
	    catch(world.europe.austria.ErrorException e)
	    {
		e.printStackTrace();
		assert(false);
	    }
	    catch(Exception e)
	    {
		e.printStackTrace();
		assert(false);
	    }

	    try
	    {
		int result = iface.foo("Error");
		assert(false);
	    }
	    catch(world.europe.austria.ErrorException e)
	    {
		System.out.println("!!catched ErrorException");
		for(int i = 0; i < e.info.length; i++)
		{
		    System.out.println(e.info[i].code + ": " +
				       e.info[i].message);
		}
	    }
	    catch(Exception e)
	    {
		e.printStackTrace();
		assert(false);
	    }

	    
	    try
	    {
		int result = iface.foo("SuperError");
		assert(false);
	    }
	    catch(world.europe.austria.SuperError e)
	    {
		System.out.println("!!catched SuperError");
	    }
      	    catch(Exception e)
	    {
		e.printStackTrace();
		assert(false);
	    }
	

	    try
	    {
		int result = iface.foo("FatalError");
		assert(false);
	    }
	    catch(world.europe.austria.FatalError e)
	    {
		System.out.println("!!catched FatalError");
	    }
	    catch(Exception e)
	    {
		e.printStackTrace();
		assert(false);
	    }

	    System.out.println(">> OK!");
	}
        catch(ccm.local.Components.NoConnection e)
        {
            e.printStackTrace();
            assert(false);
        }
    }

    public void ccm_passivate() 
        throws ccm.local.Components.CCMException
    {
        // OPTIONAL: IMPLEMENT ME HERE !
    }

    public void ccm_remove() 
        throws ccm.local.Components.CCMException
    {
        // OPTIONAL: IMPLEMENT ME HERE !
    }
}
