/**
 * This file was automatically generated by CCM Tools version 0.6.3
 * <http://ccmtools.sourceforge.net>
 * 
 * CCM_BasicTypeInterfaceImpl facet implementation.
 *
 * // TODO: WRITE YOUR DESCRIPTION HERE !
 * 
 * @author
 * @version
 */

package world.europe.austria.ccm.local;
                 
import ccm.local.Components.*;
 
/** 
 * This class implements a component facet's methods.
 *
 * // TODO: WRITE YOUR DESCRIPTION HERE !
 *
 * @author
 * @version
 */
public class Test_mirrorbasicType_mirrorImpl 
    implements world.europe.austria.ccm.local.CCM_BasicTypeInterface
{
    /** Reference to the facet's component implementation */
    private world.europe.austria.ccm.local.Test_mirrorImpl component;

    public Test_mirrorbasicType_mirrorImpl(world.europe.austria.ccm.local.Test_mirrorImpl component)
    {
        System.out.println("+Test_mirrorbasicType_mirrorImpl.basicType_mirrorImpl()");
        this.component = component;
    }

    private short short_value_;
    private int long_value_;
    private short ushort_value_;
    private int ulong_value_;
    private float float_value_;
    private double double_value_;
    private char char_value_;
    private String string_value_;
    private boolean boolean_value_;
    private byte octet_value_; 


    /** Business logic implementations */

  

    public short short_value()
        throws ccm.local.Components.CCMException
    {
        return this.short_value_;
    }     

    public void short_value(short value)
        throws ccm.local.Components.CCMException
    {
        this.short_value_ = value;
    }


    public int long_value()
        throws ccm.local.Components.CCMException
    {
        return this.long_value_;
    }     

    public void long_value(int value)
        throws ccm.local.Components.CCMException
    {
        this.long_value_ = value;
    }


    public short ushort_value()
        throws ccm.local.Components.CCMException
    {
        return this.ushort_value_;
    }     

    public void ushort_value(short value)
        throws ccm.local.Components.CCMException
    {
        this.ushort_value_ = value;
    }


    public int ulong_value()
        throws ccm.local.Components.CCMException
    {
        return this.ulong_value_;
    }     

    public void ulong_value(int value)
        throws ccm.local.Components.CCMException
    {
        this.ulong_value_ = value;
    }


    public float float_value()
        throws ccm.local.Components.CCMException
    {
        return this.float_value_;
    }     

    public void float_value(float value)
        throws ccm.local.Components.CCMException
    {
        this.float_value_ = value;
    }


    public double double_value()
        throws ccm.local.Components.CCMException
    {
        return this.double_value_;
    }     

    public void double_value(double value)
        throws ccm.local.Components.CCMException
    {
        this.double_value_ = value;
    }


    public char char_value()
        throws ccm.local.Components.CCMException
    {
        return this.char_value_;
    }     

    public void char_value(char value)
        throws ccm.local.Components.CCMException
    {
        this.char_value_ = value;
    }


    public String string_value()
        throws ccm.local.Components.CCMException
    {
        return this.string_value_;
    }     

    public void string_value(String value)
        throws ccm.local.Components.CCMException
    {
        this.string_value_ = value;
    }


    public boolean boolean_value()
        throws ccm.local.Components.CCMException
    {
        return this.boolean_value_;
    }     

    public void boolean_value(boolean value)
        throws ccm.local.Components.CCMException
    {
        this.boolean_value_ = value;
    }


    public byte octet_value()
        throws ccm.local.Components.CCMException
    {
        return this.octet_value_;
    }     

    public void octet_value(byte value)
        throws ccm.local.Components.CCMException
    {
        this.octet_value_ = value;
    }
 
    
     

}