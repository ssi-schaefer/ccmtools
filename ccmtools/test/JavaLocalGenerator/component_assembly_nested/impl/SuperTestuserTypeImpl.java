/**
 * This file was automatically generated by CCM Tools version 0.6.5
 * <http://ccmtools.sourceforge.net>
 * 
 * CCM_UserTypeInterfaceImpl facet implementation.
 *
 * // TODO: WRITE YOUR DESCRIPTION HERE !
 * 
 * @author
 * @version
 */

package world.ccm.local;
                 
import ccm.local.Components.*;
 
/** 
 * This class implements a component facet's methods.
 *
 * // TODO: WRITE YOUR DESCRIPTION HERE !
 *
 * @author
 * @version
 */
public class SuperTestuserTypeImpl 
    implements world.ccm.local.CCM_UserTypeInterface
{
    /** Reference to the facet's component implementation */
    private world.ccm.local.SuperTestImpl component;

    public SuperTestuserTypeImpl(world.ccm.local.SuperTestImpl component)
    {
        this.component = component;
    }
 


    /** Business logic implementations */

    public world.ccm.local.Color f1(world.ccm.local.Color p1, ccm.local.Holder<world.ccm.local.Color> p2, ccm.local.Holder<world.ccm.local.Color> p3)
        throws ccm.local.Components.CCMException
    {
	try 
	{
	    return component.ctx.get_connection_innerUserType().f1(p1, p2, p3);
	}
	catch(java.lang.Exception e)
	{
	    e.printStackTrace();
	    throw new  ccm.local.Components.CCMException(e.getMessage());
	}   
    }    

    public world.ccm.local.Person f2(world.ccm.local.Person p1, ccm.local.Holder<world.ccm.local.Person> p2, ccm.local.Holder<world.ccm.local.Person> p3)
        throws ccm.local.Components.CCMException
    {
	try 
	{
	    return component.ctx.get_connection_innerUserType().f2(p1, p2, p3);
	}
	catch(java.lang.Exception e)
	{
	    e.printStackTrace();
	    throw new  ccm.local.Components.CCMException(e.getMessage());
	}   
    }    

    public world.ccm.local.Address f3(world.ccm.local.Address p1, ccm.local.Holder<world.ccm.local.Address> p2, ccm.local.Holder<world.ccm.local.Address> p3)
        throws ccm.local.Components.CCMException
    {
	try 
	{
	    return component.ctx.get_connection_innerUserType().f3(p1, p2, p3);
	}
	catch(java.lang.Exception e)
	{
	    e.printStackTrace();
	    throw new  ccm.local.Components.CCMException(e.getMessage());
	}   
    }    

    public java.util.List<Integer> f4(java.util.List<Integer> p1, ccm.local.Holder<java.util.List<Integer>> p2, ccm.local.Holder<java.util.List<Integer>> p3)
        throws ccm.local.Components.CCMException
    {
	try 
	{
	    return component.ctx.get_connection_innerUserType().f4(p1, p2, p3);
	}
	catch(java.lang.Exception e)
	{
	    e.printStackTrace();
	    throw new  ccm.local.Components.CCMException(e.getMessage());
	}   
    }    

    public java.util.List<String> f5(java.util.List<String> p1, ccm.local.Holder<java.util.List<String>> p2, ccm.local.Holder<java.util.List<String>> p3)
        throws ccm.local.Components.CCMException
    {
	try 
	{
	    return component.ctx.get_connection_innerUserType().f5(p1, p2, p3);
	}
	catch(java.lang.Exception e)
	{
	    e.printStackTrace();
	    throw new  ccm.local.Components.CCMException(e.getMessage());
	}   
    }    

    public java.util.List<world.ccm.local.Person> f6(java.util.List<world.ccm.local.Person> p1, ccm.local.Holder<java.util.List<world.ccm.local.Person>> p2, ccm.local.Holder<java.util.List<world.ccm.local.Person>> p3)
        throws ccm.local.Components.CCMException
    {
	try 
	{
	    return component.ctx.get_connection_innerUserType().f6(p1, p2, p3);
	}
	catch(java.lang.Exception e)
	{
	    e.printStackTrace();
	    throw new  ccm.local.Components.CCMException(e.getMessage());
	}   
    }    

    public int f7(int t1, ccm.local.Holder<Integer> t2, ccm.local.Holder<Integer> t3)
        throws ccm.local.Components.CCMException
    {
	try 
	{
	    return component.ctx.get_connection_innerUserType().f7(t1, t2, t3);
	}
	catch(java.lang.Exception e)
	{
	    e.printStackTrace();
	    throw new  ccm.local.Components.CCMException(e.getMessage());
	}   
    }    
}
