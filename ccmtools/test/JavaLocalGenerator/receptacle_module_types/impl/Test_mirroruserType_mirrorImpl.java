/**
 * This file was automatically generated by CCM Tools version 0.6.3
 * <http://ccmtools.sourceforge.net>
 * 
 * CCM_UserTypeInterfaceImpl facet implementation.
 *
 * // TODO: WRITE YOUR DESCRIPTION HERE !
 * 
 * @author
 * @version
 */

package world.europe.austria.ccm.local;

import java.util.List;
import java.util.ArrayList;
                 
import ccm.local.Components.*;
import ccm.local.*;
 
/** 
 * This class implements a component facet's methods.
 *
 * // TODO: WRITE YOUR DESCRIPTION HERE !
 *
 * @author
 * @version
 */
public class Test_mirroruserType_mirrorImpl 
    implements world.europe.austria.ccm.local.CCM_UserTypeInterface
{
    /** Reference to the facet's component implementation */
    private world.europe.austria.ccm.local.Test_mirrorImpl component;

    public Test_mirroruserType_mirrorImpl(world.europe.austria.ccm.local.Test_mirrorImpl component)
    {
        this.component = component;
    }

    /** Business logic implementations */
    
    public Color f1(Color p1, Holder<Color> p2, Holder<Color> p3)
        throws ccm.local.Components.CCMException
    {
        p3.setValue(p2.getValue());
        p2.setValue(p1);
        return Color.orange;
    }    

    public Person f2(Person p1, Holder<Person> p2, Holder<Person> p3)
        throws ccm.local.Components.CCMException
    {
        Person r = new Person(p1.getId() + p2.getValue().getId(), 
			      p1.getName() + p2.getValue().getName());
        p3.setValue(p2.getValue());
        p2.setValue(p1);
        return r;
    }    

    public Address f3(Address p1, Holder<Address> p2, Holder<Address> p3)
        throws ccm.local.Components.CCMException
    {
        Person person = new Person(p1.getResident().getId() + p2.getValue().getResident().getId(), 
				   p1.getResident().getName() + p2.getValue().getResident().getName());
        Address addr = new Address(p1.getStreet() + p2.getValue().getStreet(), 
				   p1.getNumber() + p2.getValue().getNumber(), person);
        p3.setValue(p2.getValue());
        p2.setValue(p1);
        return addr;
    }    

    public List<Integer> f4(List<Integer> p1, 
		    Holder<List<Integer>> p2, 
		    Holder<List<Integer>> p3)
        throws ccm.local.Components.CCMException
    {
        List<Integer> result = new ArrayList<Integer>(p1.size());
        p3.setValue(new ArrayList<Integer>(p1.size()));
        for (int i = 0; i < p1.size(); i++)
        {
            result.add(i);
            p3.getValue().add(p2.getValue().get(i));
            p2.getValue().set(i, p1.get(i));
        }
        return result;
    }    

    public List<String> f5(List<String> p1, 
		       Holder<List<String>> p2, 
		       Holder<List<String>> p3)
        throws ccm.local.Components.CCMException
    {
        List<String> result = new ArrayList<String>(p1.size());
        p3.setValue(new ArrayList<String>(p1.size()));
        for(int i = 0; i< p1.size(); i++)
        {
            result.add("Test");
            p3.getValue().add(p2.getValue().get(i));
            p2.getValue().set(i, p1.get(i));
        }
        return result;
    }    

    public List<Person> f6(List<Person> p1, Holder<List<Person>> p2, Holder<List<Person>> p3)
        throws ccm.local.Components.CCMException
    {
        List<Person> result = new ArrayList<Person>(p1.size());
        p3.setValue(new ArrayList<Person>(p1.size()));
        for (int i = 0; i < p1.size(); i++)
        {
            result.add(new Person(i, "Test"));
            p3.getValue().add(p2.getValue().get(i));
            p2.getValue().set(i, p1.get(i));
        }
        return result;
    }    

    public int f7(int t1, Holder<Integer> t2, Holder<Integer> t3)
        throws ccm.local.Components.CCMException
    {
        t3.setValue(t2.getValue());
        t2.setValue(t1);
        return t3.getValue() + t1;
    }    
}
