/**
 * This file was automatically generated by CCM Tools version 0.6.3
 * <http://ccmtools.sourceforge.net>
 * 
 * CCM_Test component business logic.
 *
 * // TODO: WRITE YOUR DESCRIPTION HERE !
 *
 * @author
 * @version
 */

package world.europe.austria.ccm.local;

import world.europe.austria.*;
   
/**
 * This class implements component equivalent and supported interfaces
 * as well as component attributes.
 * Additionally, session component callback methods must be implemented.
 *
 * // TODO: WRITE YOUR DESCRIPTION HERE !
 *
 * @author
 * @version
 */   
public class TestImpl 
    implements CCM_Test
{
    /** Supported interface attribute variables */
    
    

    /** Component attribute variables */
     

    public world.europe.austria.ccm.local.CCM_Test_Context ctx;
    

    // This attribute is accessed by explicite set and get methods
    // which are part of VoidTypeInterface.
    int attr;

    
    public TestImpl()
    {
        // OPTIONAL: IMPLEMENT ME HERE !
    }


    /* 
     * Supported interface methods 
     */

    /** Supported interface constants */
    
    
    

    /** Supported interface attributes */    
    
    
    /** Supported interface methods */

    public short fb1(short p1, org.omg.CORBA.ShortHolder p2, org.omg.CORBA.ShortHolder p3)
        throws ccm.local.Components.CCMException
    {
        p3.value = p2.value;
        p2.value = p1;
        return (short)(p3.value + p1);
    }    

    public int fb2(int p1, org.omg.CORBA.IntHolder p2, org.omg.CORBA.IntHolder p3)
        throws ccm.local.Components.CCMException
    {
        p3.value = p2.value;
        p2.value = p1;
        return p3.value + p1;
    }    

    public short fb3(short p1, org.omg.CORBA.ShortHolder p2, org.omg.CORBA.ShortHolder p3)
        throws ccm.local.Components.CCMException
    {
        p3.value = p2.value;
        p2.value = p1;
        return (short)(p3.value + p1);
    }    

    public int fb4(int p1, org.omg.CORBA.IntHolder p2, org.omg.CORBA.IntHolder p3)
        throws ccm.local.Components.CCMException
    {
        p3.value = p2.value;
        p2.value = p1;
        return p3.value + p1;
    }    

    public float fb5(float p1, org.omg.CORBA.FloatHolder p2, org.omg.CORBA.FloatHolder p3)
        throws ccm.local.Components.CCMException
    {
        p3.value = p2.value;
        p2.value = p1;
        return p3.value + p1;
    }    

    public double fb6(double p1, org.omg.CORBA.DoubleHolder p2, org.omg.CORBA.DoubleHolder p3)
        throws ccm.local.Components.CCMException
    {
        p3.value = p2.value;
        p2.value = p1;
        return p3.value + p1;
    }    

    public char fb7(char p1, org.omg.CORBA.CharHolder p2, org.omg.CORBA.CharHolder p3)
        throws ccm.local.Components.CCMException
    {
        p3.value = p2.value;
        p2.value = p1;
        return (char)(p3.value + p1);
    }    

    public String fb8(String p1, org.omg.CORBA.StringHolder p2, org.omg.CORBA.StringHolder p3)
        throws ccm.local.Components.CCMException
    {
        p3.value = p2.value;
        p2.value = p1;
        return p3.value +p1;
    }    

    public boolean fb9(boolean p1, org.omg.CORBA.BooleanHolder p2, org.omg.CORBA.BooleanHolder p3)
        throws ccm.local.Components.CCMException
    {
        p3.value = p2.value;
        p2.value = p1;
        return p3.value && p1;
    }    

    public byte fb10(byte p1, org.omg.CORBA.ByteHolder p2, org.omg.CORBA.ByteHolder p3)
        throws ccm.local.Components.CCMException
    {
        p3.value = p2.value;
        p2.value = p1;
        return (byte)(p3.value + p1);
    }    




    public world.europe.austria.Color fu1(world.europe.austria.Color p1, 
					  world.europe.austria.ColorHolder p2, 
					  world.europe.austria.ColorHolder p3)
        throws ccm.local.Components.CCMException
    {
        p3.value = p2.value;
        p2.value = p1;
        return world.europe.austria.Color.orange;
    }    

    public world.europe.austria.Person fu2(world.europe.austria.Person p1, 
					   world.europe.austria.PersonHolder p2, 
					   world.europe.austria.PersonHolder p3)
        throws ccm.local.Components.CCMException
    {
        world.europe.austria.Person r =
            new world.europe.austria.Person(p1.id + p2.value.id, p1.name + p2.value.name);
        p3.value = p2.value;
        p2.value = p1;
        return r;
    }    

    public world.europe.austria.Address fu3(world.europe.austria.Address p1, 
					    world.europe.austria.AddressHolder p2, 
					    world.europe.austria.AddressHolder p3)
        throws ccm.local.Components.CCMException
    {
        Person pers = new Person(p1.resident.id + p2.value.resident.id, p1.resident.name + p2.value.resident.name);
        Address addr = new Address(p1.street + p2.value.street, p1.number + p2.value.number, pers);
        p3.value = p2.value;
        p2.value = p1;
        return addr;
    }    

    public int[] fu4(int[] p1, 
		     world.europe.austria.LongListHolder p2, 
		     world.europe.austria.LongListHolder p3)
        throws ccm.local.Components.CCMException
    {
        int[] result = new int[p1.length];
        p3.value = new int[p1.length];
        for (int i = 0; i < p1.length; i++)
        {
            result[i] = i;
            p3.value[i] = p2.value[i];
            p2.value[i] = p1[i];
        }
        return result;

    }    

    public String[] fu5(String[] p1, 
			world.europe.austria.StringListHolder p2, 
			world.europe.austria.StringListHolder p3)
        throws ccm.local.Components.CCMException
    {
        String[] result = new String[p1.length];
        p3.value = new String[p1.length];
        for(int i = 0; i< p1.length; i++)
        {
            result[i] = "Test";
            p3.value[i] = p2.value[i];
            p2.value[i] = p1[i];
        }
        return result;
    }    

    public world.europe.austria.Person[] fu6(world.europe.austria.Person[] p1, 
					     world.europe.austria.PersonListHolder p2, 
					     world.europe.austria.PersonListHolder p3)
        throws ccm.local.Components.CCMException
    {
        Person[] result = new Person[p1.length];
        p3.value = new Person[p1.length];
        for (int i = 0; i < p1.length; i++)
        {
            Person person = new Person(i, "Test");
            result[i] = person;
            p3.value[i] = p2.value[i];
            p2.value[i] = p1[i];
        }
        return result;
    }    

    public int fu7(int t1, org.omg.CORBA.IntHolder t2, org.omg.CORBA.IntHolder t3)
        throws ccm.local.Components.CCMException
    {
        t3.value = t2.value;
        t2.value = t1;
        return t3.value + t1;
    }    




    public void fv1(int p1)
        throws ccm.local.Components.CCMException
    {
	attr = p1;
    }    

    public int fv2()
        throws ccm.local.Components.CCMException
    {
	return attr;
    }    
    


    /** Component attribute accessor methods */
    


    /** Facet implementation factory methods */
        

    /** Component callback methods */
    
    public void set_session_context(ccm.local.Components.SessionContext ctx) 
        throws ccm.local.Components.CCMException
    {
        this.ctx = (world.europe.austria.ccm.local.CCM_Test_Context)ctx; 
    }

    public void ccm_activate() 
        throws ccm.local.Components.CCMException
    {
        // OPTIONAL: IMPLEMENT ME HERE !
    }

    public void ccm_passivate() 
        throws ccm.local.Components.CCMException
    {
        // OPTIONAL: IMPLEMENT ME HERE !
    }

    public void ccm_remove() 
        throws ccm.local.Components.CCMException
    {
        // OPTIONAL: IMPLEMENT ME HERE !
    }
}
