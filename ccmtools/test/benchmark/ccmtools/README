Installation requisites:
------------------------

Confix configuration profile:

benchmark_profile = {
    'PREFIX': '/home/eteinik/install/benchmark_install',
    'BUILDROOT': '/home/eteinik/tmp/benchmark_build',
    'ADVANCED': 'true',
    'CONFIX': {
    },
    'CONFIGURE': {
       'ENV': {
          'CC': 'gcc',
          'CXX': 'g++',
          'CFLAGS': "-O2 -Wall ",
          'CXXFLAGS': "-O2 -Wall ",
       },
       'ARGS': [
        '--with-mico=/opt/gcc-3.3.4/mico-2.3.11/lib/mico-setup.sh'
       ]
    },
}


> confix.py --version
confix.py version 1.4.0

> gcc --version
gcc (GCC) 3.3.6

> ccmtools --version
CCM Tools version 0.6.0



Install ccmtools C++ runtime environment:
-----------------------------------------

> cd wx-toolsbox-1.0.0 
> confix.py --profile=benchmark  --bootstrap --configure --make --targets=install

> cd wx-utils-1.2.2 
> confix.py --profile=benchmark  --bootstrap --configure --make --targets=install

> cd cpp-environment
> confix.py --profile=benchmark  --packageroot=`pwd`/ccm --bootstrap --configure --make --targets=install



Build and run the benchmark examples:
-------------------------------------

> cd ccmtools/test/benchmark/ccmtools 

a) Local component benchmark:
> make local
> make local_check
See the //!!!!!! section in client/ccm_local_client/Client.cc to 
change benchmark settings.


b) Remote component benchmark with C++ client:
> make remote
> make remote_check


Run benchmarks:
---------------

a) Local component benchmark:
<benchmark_build>/ccm_collocated_client/ccm_collocated_client_Client

b) Remote component benchmark with collocated C++ client:
<benchmark_build>/ccm_collocated_client/ccm_collocated_client_Client

c) Remote component benchmark with C++ client
<benchmark_build>/ccm_server/ccm_server_Server
<benchmark_build>/ccm_remote_client/ccm_remote_client_Client

Don't forget to start the CORBA NameService for remote component tests!!
> cd cpp-environment
> bin/runJavaNS


Cleanup:
--------

> make local_clean
> make remote_clean