#ifndef __INTERFACE_USER_TYPE_OPERSTIONS__IDL__
#define __INTERFACE_USER_TYPE_OPERATIONS__IDL__

module world 
{
	enum Color 
  	{
    		red, 
    		green, 
    		blue, 
    		black, 
    		orange
  	};

  	struct Person 
  	{
    		long id;
    		string name;
  	};
  
  	typedef long TimeStamp;
  
  	typedef sequence<long> LongList;
 	typedef sequence<string> StringList;
  	typedef sequence<Person> PersonList;
  
  	typedef long LongArray[10];
  	typedef string StringArray[10];
  	typedef Person PersonArray[10];
  
   	typedef long LongMatrix[10][5];
  	typedef long LongCube[10][5][7];
  
  	module europe
  	{
    		module austria
    		{
      		struct Address 
      		{
				string street;
				long   number;
				Person resident;
      		};
      
      		interface InterfaceUserTypeOperations
      		{
				Color      f1(in Color p1, inout Color p2, out Color p3);
				Person     f2(in Person p1, inout Person p2, out Person p3);
				Address    f3(in Address p1, inout Address p2, out Address p3);
				LongList   f4(in LongList p1, inout LongList p2, out LongList p3);
				StringList f5(in StringList p1, inout StringList p2, out StringList p3);
				PersonList f6(in PersonList p1, inout PersonList p2, out PersonList p3);
				TimeStamp  f7(in TimeStamp t1, inout TimeStamp t2, out TimeStamp t3);

				LongArray   f8(in LongArray p1, inout LongArray p2, out LongArray p3);
				StringArray f9(in StringArray p1, inout StringArray p2, out StringArray p3);
				PersonArray f10(in PersonArray p1, inout PersonArray p2, out PersonArray p3);

				LongMatrix  f11(in LongMatrix p1, inout LongMatrix p2, out LongMatrix p3);
				LongCube    f12(in LongCube p1, inout LongCube p2, out LongCube p3);
      		};
      		
    		}; // end of module austria
  	}; // end of module europe
}; // end of module world

#endif // __INTERFACE_USER_TYPE_OPERATIONS__IDL__

