
/**
 * This file was automatically generated by CCM Tools version 0.5.3-pre3
 * <http://ccmtools.sourceforge.net/>
 *
 * world::europe::austria::ccm::local::CCM_IFace facet class implementation. 
 *
 * // TODO: WRITE YOUR DESCRIPTION HERE! 
 *
 * @author
 * @version 
 **/

#include <cassert>
#include <iostream>

#include "Test_iface_impl.h"

using namespace std;
using namespace wamas::platform::utils;

namespace world {
namespace europe {
namespace austria {
namespace ccm {
namespace local {

Test_iface_impl::Test_iface_impl(world::europe::austria::ccm::local::Test_impl* component_impl)
  : component(component_impl)
{
    // OPTIONAL : IMPLEMENT ME HERE !
}

Test_iface_impl::~Test_iface_impl()
{
    // OPTIONAL : IMPLEMENT ME HERE !
}

long
Test_iface_impl::foo(const std::string& msg)
throw(::Components::ccm::local::CCMException,
        world::europe::austria::ccm::local::SuperError,
        world::europe::austria::ccm::local::ErrorException,
        world::europe::austria::ccm::local::FatalError )
{
    if(msg == "Error") {
        ErrorException error;
        ErrorInfoList errorInfoList;
        ErrorInfo errorInfo1;
        errorInfo1.code = 7;
        errorInfo1.message = "First error";
        errorInfoList.push_back(errorInfo1);

        ErrorInfo errorInfo2;
        errorInfo2.code = 13;
        errorInfo2.message = "Second error";
        errorInfoList.push_back(errorInfo2);

        error.info = errorInfoList;
        throw error;
    }
    else if(msg == "SuperError") {
      throw SuperError();
    }
    else if(msg == "FatalError") {
      FatalError fatalError;
      fatalError.what = "This is a fatal error condition!";
      throw fatalError;
    }
    else {
      cout << ">> " << msg << endl;
    }
    return msg.length();
}

} // /namespace local
} // /namespace ccm
} // /namespace austria
} // /namespace europe
} // /namespace world
