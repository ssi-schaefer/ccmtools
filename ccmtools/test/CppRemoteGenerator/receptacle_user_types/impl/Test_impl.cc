
/***
 * Test component business logic implementation.
 * 
 * // TODO: WRITE YOUR DESCRIPTION HERE! 
 *
 * @author
 * @version 
 *
 * This file structure was automatically generated by CCM Tools
 * <http://ccmtools.sourceforge.net/> and contains a component's
 * implementation classes. 
 ***/

#include <cassert>
#include <iostream>
#include <WX/Utils/debug.h>

#include "Test_impl.h"
#include "Test_inPort_impl.h"

using namespace std;
using namespace WX::Utils;
using namespace CCM_Local;

namespace CCM_Local {
namespace CCM_Session_Test {

//==============================================================================
// CCM_Test - component implementation
//==============================================================================

CCM_Test_impl::CCM_Test_impl()
{
    DEBUGNL("+CCM_Test_impl->CCM_Test_impl()");
}

CCM_Test_impl::~CCM_Test_impl()
{
    DEBUGNL("-CCM_Test_impl->~CCM_Test_impl()");
}

void
CCM_Test_impl::set_session_context(
    LocalComponents::SessionContext* context)
    throw(LocalComponents::CCMException)
{
    DEBUGNL(" CCM_Test_impl->set_session_context()");
    ctx = dynamic_cast<CCM_Test_Context*>(context);
}

void
CCM_Test_impl::ccm_activate()
    throw(LocalComponents::CCMException)
{
    DEBUGNL(" CCM_Test_impl->ccm_activate()");

    { // Test case: long
      const long p1 = 7;
      long p2 = 3, p3, result;
      result = ctx->get_connection_outPort()->f1(p1, p2, p3);
      assert(p2 == 7);
      assert(p3 == 3);
      assert(result == 3+7);
    }

    { // Test case: struct Person { long id; string name; };
      Person p1;
      Person p2;
      Person p3;
      Person result;
      
      p1.name = "Egon";   
      p1.id = 3;
      p2.name = "Andrea"; 
      p2.id = 23;
      result = ctx->get_connection_outPort()->f2(p1,p2,p3);
      assert(p3.name == "Andrea");
      assert(p2.name == "Egon");
      assert(result.name == "EgonAndrea");
    }

}

void
CCM_Test_impl::ccm_passivate()
    throw(LocalComponents::CCMException)
{
    DEBUGNL(" CCM_Test_impl->ccm_passivate()");

    // OPTIONAL : IMPLEMENT ME HERE !
}

void
CCM_Test_impl::ccm_remove()
    throw(LocalComponents::CCMException)
{
    DEBUGNL(" CCM_Test_impl->ccm_remove()");

    // OPTIONAL : IMPLEMENT ME HERE !
}

//==============================================================================
// CCM_Console facet implementation
//==============================================================================

CCM_Console*
CCM_Test_impl::get_inPort()
{
    DEBUGNL(" CCM_Test_impl->get_inPort()");
    inPort_impl* facet = new inPort_impl(this);
    return dynamic_cast<CCM_Console*>(facet);
}

} // /namespace CCM_Session_Test
} // /namespace CCM_Local

