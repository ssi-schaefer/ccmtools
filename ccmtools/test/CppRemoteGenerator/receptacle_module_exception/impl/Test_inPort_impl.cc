
/**
 * This file was automatically generated by CCM Tools version 0.5.3-pre3
 * <http://ccmtools.sourceforge.net/>
 *
 * world::europe::austria::ccm::local::CCM_Console facet class implementation. 
 *
 * // TODO: WRITE YOUR DESCRIPTION HERE! 
 *
 * @author
 * @version 
 **/

#include <cassert>
#include <iostream>
#include <WX/Utils/debug.h>

#include "Test_inPort_impl.h"

using namespace std;
using namespace WX::Utils;

namespace world {
namespace europe {
namespace austria {
namespace ccm {
namespace local {
namespace component {
namespace Test {

inPort_impl::inPort_impl(
    world::europe::austria::ccm::local::component::Test::CCM_Test_impl* component_impl)
  : component(component_impl)
{
    // OPTIONAL : IMPLEMENT ME HERE !
}

inPort_impl::~inPort_impl()
{
    // OPTIONAL : IMPLEMENT ME HERE !
}

long
inPort_impl::print(const std::string& msg)
throw(::ccm::local::Components::CCMException,
        world::europe::austria::ccm::local::SuperError,
        world::europe::austria::ccm::local::SimpleError,
        world::europe::austria::ccm::local::FatalError )
{
    cout << ">> " << msg << endl;

    if(msg == "SimpleError") {
        SimpleError error;
        ErrorInfoList error_info_list;
        ErrorInfo error_info;
        error_info.code = 7;
        error_info.message = "A simple error!";
        error_info_list.push_back(error_info);
        error.info = error_info_list;
        throw error;
    }

    if(msg == "SuperError")
        throw SuperError();

    if(msg == "FatalError")
        throw FatalError();

    return msg.length();
}

} // /namespace Test
} // /namespace component
} // /namespace local
} // /namespace ccm
} // /namespace austria
} // /namespace europe
} // /namespace world
