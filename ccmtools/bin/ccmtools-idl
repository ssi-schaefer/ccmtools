#! /usr/bin/env python

## ccmtools-idl : IDL compiler wrapper
## Egon Teiniker <egon.teiniker@tugraz.at>
## Copyright (C) 2003 Salomon Automation
##
##
## This program is free software; you can redistribute it and/or modify it unde
## the terms of the GNU General Public License as published by the Free Softwar
## Foundation; either version 2 of the License, or (at your option) any later
## version.
##
## This program is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
## FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
## details.
##
## You should have received a copy of the GNU General Public License along with
## this program; if not, write to the Free Software Foundation, Inc., 59 Temple
## Place - Suite 330, Boston, MA 02111-1307, USA.

import os, sys

FILES = []
INCLUDES = ''
IDL_COMPILER= ''
CMD=''
USAGE = '''Usage: ccmtools-idl [OPTION]... IDL-FILEs...

Generate stub and skeleton files based on the given IDL files.

Options:
    -h, --help                  Print out this help
    --mico                      Use the mico IDL compiler 
    --java                      Use the Java IDL compiler 
    -Ipath                      Add path to the include path for IDL files
    -V, --version               Print out ccmtools version information
''' 

index = 1
start = 1
while index < len(sys.argv):
    arg = sys.argv[index]
    index += 1

    if arg.startswith('--mico'):
        IDL_COMPILER = 'idl --relative-paths -I.'
        start += 1
    elif arg.startswith('--java'):
        IDL_COMPILER = 'idlj -fall'
        start += 1    
    elif arg == '-h' or arg.startswith('--h'):
        print USAGE;
        sys.exit(0)
    elif arg.startswith('-I'):
        if IDL_COMPILER.startswith('idlj'):
            INCLUDES += ' -i' + arg[2:]
        elif IDL_COMPILER.startswith('idl'):    
            INCLUDES += ' -I' + arg[2:]
        start += 1
    elif arg == '-V' or arg.startswith('--v'):
        os.execlp('ccmtools-generate', 'ccmtools-generate', '--version')


FILES = sys.argv[start:] 

for x in FILES:
  CMD = '%s %s ' % (IDL_COMPILER, INCLUDES) + x
  print CMD
  os.system('%s' % (CMD))






